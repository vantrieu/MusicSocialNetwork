{"version":3,"sources":["helpers/history.ts","helpers/api.ts","helpers/set-auth-token.ts","services/user.service.ts","store/Account/types.ts","store/Account/actions.ts","pages/Account/Login.tsx","components/PrivateRoute.tsx","services/album.services.ts","services/playlist.services.ts","services/singer.services.ts","services/track.services.ts","services/tracktypes.services.ts","pages/Account/ForgotPassword.tsx","pages/Account/ResetPassword.tsx","pages/Account/NotFound.tsx","pages/Admin/Components/LefMenu.tsx","pages/Admin/Components/TopNavbar.tsx","pages/Admin/Profile/EditProfile.tsx","pages/Admin/Profile/ViewProfile.tsx","pages/Admin/Users/ListUser.tsx","store/TrackTypes/types.ts","store/Notify/types.ts","store/Notify/actions.ts","pages/Admin/TrackTypes/ListTrackTypes.tsx","store/TrackTypes/actions.ts","pages/Admin/TrackTypes/AddTrackType.tsx","pages/Admin/TrackTypes/EditTrackType.tsx","store/Tracks/types.ts","pages/Admin/Components/PlayMusic.tsx","pages/Admin/Tracks/ListTrack.tsx","store/Tracks/actions.ts","store/Singers/types.ts","pages/Admin/Singers/ListSinger.tsx","store/Singers/actions.ts","pages/Admin/Singers/AddSinger.tsx","pages/Admin/Singers/EditSinger.tsx","pages/Admin/Tracks/AddTrack.tsx","store/Playlist/types.ts","pages/Admin/Playlist/Playlists.tsx","store/Playlist/actions.ts","pages/Admin/Playlist/CreatePlaylist.tsx","pages/Admin/Components/TrackItem.tsx","pages/Admin/Components/TrackItemAddPlaylist.tsx","pages/Admin/Playlist/EditPlaylist.tsx","pages/Admin/Albums/CreateAlbum.tsx","store/Albums/types.ts","pages/Admin/Albums/ListAlbum.tsx","store/Albums/actions.ts","pages/Admin/Admin.tsx","components/AccountRoute.tsx","App.tsx","reportWebVitals.ts","store/Account/reducers.ts","store/Notify/reducers.ts","store/TrackTypes/reducers.ts","store/Tracks/reducers.ts","store/Singers/reducers.ts","store/Playlist/reducers.ts","store/Albums/reducers.ts","store/index.ts","index.tsx"],"names":["history","createBrowserHistory","api","axios","create","baseURL","process","interceptors","response","use","res","err","status","Promise","reject","userService","login","username","password","a","post","then","catch","error","GetMyProfile","get","data","FotgotPassword","email","ResetPassWord","token","defaults","headers","common","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOG_OUT","LOAD_CURRENT_USER_REQUEST","LOAD_CURRENT_USER_SUCCESS","LOAD_CURRENT_USER_FAILURE","dispatch","type","payload","user","items","toString","logout","Login","useState","inputs","setInputs","submitted","setSubmitted","account","useSelector","state","useDispatch","location","useLocation","useEffect","handleChange","e","target","name","value","className","onSubmit","preventDefault","from","pathname","role","push","id","aria-describedby","onChange","placeholder","style","display","justifyContent","autoComplete","loading","to","PrivateRoute","children","rest","render","accessToken","albumsServices","CreateAlbum","body","GetListAlbum","limit","page","keyword","queryUrl","length","playlistsServices","GetListPlaylist","keyWord","CreatePlayList","GetPlaylistById","AddTrackToPlaylist","track_id","playlist_id","track_ids","GetOptionTrack","RemoveTrack","singerService","GetListSinger","CreateSinger","UpdateSinger","put","GetListOption","trackService","CreateTrack","GetListTrack","UpdateTrack","DeleteTrack","delete","trackTypesServices","CreateTrackType","typename","GetListTrackType","EditTrackType","model","_id","DeleteTrackType","ForgotPassword","setRes","setLoading","handleSubmit","ResetPassword","props","match","params","console","log","NotFound","data-text","LefMenu","toggled","setToggled","onClick","TopNavbar","nofify","notify","isShowProfilemenuDropdown","setIsShowProfilemenuDropdown","toast","message","data-toggle","aria-haspopup","aria-expanded","lastname","firstname","src","avatar","alt","aria-labelledby","EditProfile","birthDate","moment","birthday","format","gender","defaultValue","width","selected","Date","dateFormat","date","handleChangdate","height","map","item","index","accept","ViewProfile","ListUser","LOAD_TRACKTYPE_REQUEST","LOAD_TRACKTYPE_SUCCESS","LOAD_TRACKTYPE_FAILURE","DELETE_TRACKTYPE","SHOW_NOTIFY","REFRESH_NOTIFY","ShowNotify","ListTrackTypes","trackTypes","tracktypes","submit","confirmAlert","title","buttons","label","trackType","cellSpacing","createdAt","updatedAt","AddTrackType","goBack","listTrackTypes","find","t","FindTrackTypeById","LOAD_TRACK_REQUEST","LOAD_TRACK_SUCCESS","LOAD_TRACK_FAILURE","DELETE_TRACK","PlayMusic","tracks","setIndex","handleNext","background","trackname","autoPlay","showSkipControls","showJumpControls","onClickNext","onEnded","onClickPrevious","tracklink","ListTrack","metaData","setKeyWord","meta","handleDelete","selectedOption","options","float","aria-controls","description","singer","tracktype","total","itemClass","linkClass","activePage","Number","itemsCountPerPage","totalItemsCount","totalDocs","pageRangeDisplayed","pageNumber","LOAD_SINGER_REQUEST","LOAD_SINGER_SUCCESS","LOAD_SINGER_FAILURE","ListSinger","singers","AddSinger","FormData","formData","setFormData","Array","selectImages","setSelectimages","formDataSubmit","append","fileArray","files","i","URL","createObjectURL","EditSinger","listSinger","p","getSingerById","formInput","setFormInput","temp","AddTrack","setSinger","setTrackType","singerOption","setSingerOption","trackTypeOption","setTrackTypeOption","music","setMusic","option","forEach","element","getSingerOption","getTrackTypeOption","color","rows","form","LOAD_PLAYLIST_SUCCESS","LOAD_PLAYLIST_REQUEST","LOAD_PLAYLIST_FAILURE","Playlists","playlists","setPage","playlistname","CreatePlaylist","TrackItem","handleRemove","setReRender","reRender","margin","track","borderRadius","fontSize","marginLeft","marginTop","TrackItemAddPlaylist","handleAddTrackToPlaylist","EditPlaylist","playlist","setPlaylist","listTrack","setListTrack","totalPages","pagingCounter","hasPrevPage","hasNextPage","prevPage","nextPage","setMetaData","result","fetchData","paddingTop","marginBottom","overflowY","overflowX","albumname","isMulti","LOAD_ALBUM_REQUEST","LOAD_ALBUM_SUCCESS","LOAD_ALBUM_FAILURE","ListAlbum","albums","Admin","exact","path","component","AccountRoute","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","refreshToken","expireIn","RefreshItems","trackTypesState","findIndex","u","splice","tracksState","persistConfig","key","storage","whitelist","rootReducer","combineReducers","action","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","createStore","configureStore","persistedStore","persistStore","currentState","getState","subscribe","previousState","setAuthToken","ReactDOM","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.d71366f3.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory();","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_URL}`,\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  // },\r\n});\r\n\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response.status === 401) {\r\n      //todo\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport { api };","import { api } from './';\r\n\r\nexport const setAuthToken = (token: string) => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-access-token'] = `${token}`;\r\n  } else {\r\n    delete api.defaults.headers.common['x-access-token'];\r\n  }\r\n};","import { api } from '../helpers/index';\r\n\r\nconst login = async (username: string, password: string): Promise<any> => {\r\n    return await api.post('/accounts/login', { username, password })\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetMyProfile = async (): Promise<any> => {\r\n    return await api.get('/users/my-profile')\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst FotgotPassword = async (email: string): Promise<any> => {\r\n    return await api.post('/accounts/forgot-password', { email })\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst ResetPassWord = async (password: string, token: string) => {\r\n    api.defaults.headers.common['x-access-token'] = `${token}`;\r\n    return await api.post('/accounts/change-password', { password })\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nexport const userService = {\r\n    login,\r\n    GetMyProfile,\r\n    FotgotPassword,\r\n    ResetPassWord\r\n}","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const LOAD_CURRENT_USER_REQUEST = 'LOAD_CURRENT_USER_REQUEST';\r\nexport const LOAD_CURRENT_USER_SUCCESS = 'LOAD_CURRENT_USER_SUCCESS';\r\nexport const LOAD_CURRENT_USER_FAILURE = 'LOAD_CURRENT_USER_FAILURE';\r\n\r\nexport interface AuthenticatedUser {\r\n    _id: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    gender: string;\r\n    avatar: string;\r\n    birthday: string;\r\n}\r\n\r\ninterface LoginRequest {\r\n    type: typeof LOGIN_REQUEST;\r\n    payload: {\r\n        username: string;\r\n        password: string;\r\n    };\r\n}\r\n\r\ninterface LoginSuccess {\r\n    type: typeof LOGIN_SUCCESS;\r\n    payload: {\r\n        accessToken: string;\r\n        refreshToken: string;\r\n        role: string;\r\n        expireIn: number;\r\n    };\r\n}\r\n\r\ninterface LoginFailure {\r\n    type: typeof LOGIN_FAILURE;\r\n    payload: {\r\n        error: string;\r\n    };\r\n}\r\n\r\ninterface LoadCurrentUserRequest {\r\n    type: typeof LOAD_CURRENT_USER_REQUEST;\r\n}\r\n\r\ninterface LoadCurrentUserSuccess {\r\n    type: typeof LOAD_CURRENT_USER_SUCCESS;\r\n    payload: {\r\n        user: AuthenticatedUser;\r\n    }\r\n}\r\n\r\ninterface LoadCurrentUserFailure {\r\n    type: typeof LOAD_CURRENT_USER_FAILURE;\r\n    payload: {\r\n        error: string;\r\n    }\r\n}\r\n\r\ninterface Logout {\r\n    type: typeof LOG_OUT;\r\n}\r\n\r\nexport interface AccountState {\r\n    user: AuthenticatedUser | null;\r\n    loading: boolean;\r\n    error: string;\r\n    accessToken: string | null;\r\n    refreshToken: string | null;\r\n    role: string | null;\r\n    expireIn: number | 0;\r\n}\r\n\r\nexport type AccountActionTypes = \r\n    | LoginRequest\r\n    | LoginSuccess\r\n    | LoginFailure\r\n    | Logout\r\n    | LoadCurrentUserRequest\r\n    | LoadCurrentUserSuccess\r\n    | LoadCurrentUserFailure;","import { userService } from './../../services/user.service';\r\nimport {\r\n    AccountActionTypes,\r\n    LOAD_CURRENT_USER_FAILURE,\r\n    LOAD_CURRENT_USER_REQUEST,\r\n    LOAD_CURRENT_USER_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOG_OUT\r\n} from './types';\r\nimport { Dispatch } from \"react\";\r\nimport { history } from '../../helpers';\r\n\r\nexport const login = (username: string, password: string, from: string) => {\r\n    return async (dispatch: Dispatch<AccountActionTypes>) => {\r\n        dispatch({\r\n            type: LOGIN_REQUEST,\r\n            payload: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        });\r\n\r\n        try {\r\n            const response = await userService.login(username, password);\r\n            if (response.status === 200 && (response.data.role === 'Moderator' || response.data.role === 'Administrator')) {\r\n                dispatch({\r\n                    type: LOGIN_SUCCESS,\r\n                    payload: response.data,\r\n                });\r\n                history.push(from);\r\n            } else {\r\n                dispatch({\r\n                    type: LOGIN_FAILURE,\r\n                    payload: {\r\n                        error: response.error\r\n                    },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOGIN_FAILURE,\r\n                payload: { error: error.toString() },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetMyProfile = () => {\r\n    return async (dispatch: Dispatch<AccountActionTypes>) => {\r\n        dispatch({\r\n            type: LOAD_CURRENT_USER_REQUEST,\r\n        });\r\n\r\n        try {\r\n            const response = await userService.GetMyProfile();\r\n            dispatch({\r\n                type: LOAD_CURRENT_USER_SUCCESS,\r\n                payload: {\r\n                    user: response.items\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOAD_CURRENT_USER_FAILURE,\r\n                payload: { error: error.toString() },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): AccountActionTypes => {\r\n    return { type: LOG_OUT }\r\n}","import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AppState } from '../../store';\r\nimport { useLocation } from 'react-router';\r\nimport { login, logout } from '../../store/Account/actions';\r\nimport { AccountState } from '../../store/Account/types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n    const [inputs, setInputs] = useState({\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const account = useSelector<AppState>((state) => state.account) as AccountState;\r\n\r\n    const { username, password } = inputs;\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        dispatch(logout());\r\n    }, [dispatch]);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (username && password) {\r\n            const { from }: any = location.state || { from: { pathname: '/' } };\r\n            dispatch(login(username, password, from));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row justify-content-center'>\r\n                <div className='col-xl-10 col-lg-12 col-md-9'>\r\n                    <div className='card o-hidden border-0 shadow-lg my-5'>\r\n                        <div className='card-body p-0'>\r\n                            <div className='row'>\r\n                                <div className='col-lg-6 d-none d-lg-block bg-login-image' />\r\n                                <div className='col-lg-6'>\r\n                                    <div className='p-5'>\r\n                                        <div className='text-center'>\r\n                                            <h1 className='h4 text-gray-900 mb-4'>Chào mừng bạn trở lại!</h1>\r\n                                        </div>\r\n                                        <form className='user' onSubmit={handleSubmit}>\r\n                                            <div className='form-group'>\r\n                                                <input\r\n                                                    type='text'\r\n                                                    className={\r\n                                                        'form-control form-control-user ' +\r\n                                                        (submitted && !username ? 'is-invalid' : '')\r\n                                                    }\r\n                                                    id='exampleInputEmail'\r\n                                                    aria-describedby='emailHelp'\r\n                                                    onChange={handleChange}\r\n                                                    placeholder='Tên đăng nhập...'\r\n                                                    name='username'\r\n                                                />\r\n                                                {submitted && !username && (\r\n                                                    <div className='invalid-feedback' style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                        Tên đăng nhập là bắt buộc\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className='form-group'>\r\n                                                <input\r\n                                                    type='password'\r\n                                                    className={\r\n                                                        'form-control form-control-user ' +\r\n                                                        (submitted && !username ? 'is-invalid' : '')\r\n                                                    }\r\n                                                    id='exampleInputPassword'\r\n                                                    placeholder='Mật khẩu...'\r\n                                                    onChange={handleChange}\r\n                                                    name='password'\r\n                                                    autoComplete=\"on\"\r\n                                                />\r\n                                                {submitted && !password && (\r\n                                                    <div className='invalid-feedback' style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                        Mật khẩu là bắt buộc\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className='form-group'>\r\n                                                {submitted && (account.error !== '') ?\r\n                                                    <div className='invalid-feedback' style={{ display: \"flex\", justifyContent: \"center\" }}>{account.error}</div> : ''\r\n                                                }\r\n                                            </div>\r\n                                            <div className='form-group' style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                <button className='btn btn-primary'>\r\n                                                    {account.loading && (\r\n                                                        <span className='spinner-border spinner-border-sm mr-1'></span>\r\n                                                    )}\r\n                                                    Đăng nhập\r\n                                                </button>\r\n                                            </div>\r\n                                        </form>\r\n                                        <hr />\r\n                                        <div className=\"text-center\">\r\n                                            <Link className=\"small\" to='/forgot-password'>\r\n                                                Forgot Password?\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useSelector } from 'react-redux';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport { Login } from '../pages/Account/Login';\r\nimport { AppState } from '../store';\r\nimport { AccountState } from '../store/Account/types';\r\n\r\nexport const PrivateRoute = ({ children, ...rest }: RouteProps): JSX.Element => {\r\n    const account: AccountState = useSelector((state: AppState) => state.account);\r\n    return (\r\n        <Route {...rest} render={() => (account.accessToken ? children : <Login />)}></Route>\r\n    );\r\n}\r\n","import { api } from '../helpers/index';\r\n\r\nconst CreateAlbum = async (body: FormData): Promise<any> => {\r\n    return await api.post('/albums', body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetListAlbum = async (limit: number, page: number, keyword: string): Promise<any> => {\r\n    var queryUrl = `?page=${page}&limit=${limit}`;\r\n    if (keyword.length !== 0){\r\n        queryUrl += `&keyword=${keyword}`; \r\n    }\r\n    return await api.get(`/albums${queryUrl}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        });\r\n}\r\n\r\nexport const albumsServices = {\r\n    CreateAlbum,\r\n    GetListAlbum\r\n}","import { api } from '../helpers/index';\r\n// import { Playlist } from '../store/Playlist/types';\r\n\r\n\r\n\r\nconst GetListPlaylist = async (limit: number, page: number, keyWord: String): Promise<any> => {\r\n    return await api.get(`/playlists?limit=${limit}&page=${page}&keyword=${keyWord}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst CreatePlayList = async (body: FormData): Promise<any> => {\r\n    return await api.post('/playlists/create-playlist', body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetPlaylistById = async (id: string): Promise<any> => {\r\n    return api.get(`/playlists/detail/${id}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst AddTrackToPlaylist = async (id: string, track_id: string): Promise<any> => {\r\n    let body = {\r\n        playlist_id: id,\r\n        track_ids: [track_id]\r\n    };\r\n    return api.post(`/playlists/add-track`, body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetOptionTrack = async (id: number, page: number, keyWord: String): Promise<any> => {\r\n    keyWord = keyWord.length === 0 ? '' : `&keyword=${keyWord}`;\r\n    return await api.get(`/tracks/option-music/${id}?limit=25&page=${page}${keyWord}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst RemoveTrack = async (playlist_id: string, track_id: string): Promise<any> => {\r\n    return await api.post('/playlists/remove-track', { playlist_id, track_id })\r\n    .then(response => {\r\n        return response;\r\n    })\r\n    .catch(error => {\r\n        return Promise.reject(error);\r\n    })\r\n}\r\n\r\nexport const playlistsServices = {\r\n    GetListPlaylist,\r\n    CreatePlayList,\r\n    GetPlaylistById,\r\n    AddTrackToPlaylist,\r\n    GetOptionTrack,\r\n    RemoveTrack\r\n}","import { api } from '../helpers/index';\r\n\r\nconst GetListSinger = async (): Promise<any> => {\r\n    return await api.get('/singers/get-list')\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst CreateSinger = async (body: FormData):Promise<any> => {\r\n    return await api.post('/singers', body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst UpdateSinger = async (id: string, body: FormData):Promise<any> => {\r\n    return await api.put(`/singers/${id}`, body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetListOption = async (): Promise<any> => {\r\n    return await api.get('/singers/list-option')\r\n        .then(response => {\r\n            return response.data.items;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nexport const singerService = {\r\n    GetListSinger,\r\n    CreateSinger,\r\n    UpdateSinger,\r\n    GetListOption\r\n}","import { api } from '../helpers/index';\r\n\r\nconst CreateTrack = async (body: FormData): Promise<any> => {\r\n    return await api.post('/tracks/create-track', body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetListTrack = async (limit: number, page: number, keyWord: string): Promise<any> => {\r\n    keyWord = (keyWord === '' || keyWord.length === 0) ? `` :  `&keyword=${keyWord}`;\r\n    return await api.get(`/tracks/list-music?limit=${limit}&page=${page}${keyWord}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst UpdateTrack = async (id: string, body: FormData): Promise<any> => {\r\n    return await api.post(`/tracks/update-track/${id}`, body)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst DeleteTrack = async (id: string): Promise<any> => {\r\n    return await api.delete(`/tracks/delete/${id}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nexport const trackService = {\r\n    CreateTrack,\r\n    GetListTrack,\r\n    UpdateTrack,\r\n    DeleteTrack\r\n}","import { api } from '../helpers/index';\r\nimport { TrackTypes } from '../store/TrackTypes/types';\r\n\r\nconst CreateTrackType = async (typename: string): Promise<any> => {\r\n    return await api.post('/tracktypes/create', { typename })\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetListTrackType = async (): Promise<any> => {\r\n    return await api.get('/tracktypes/list-type')\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst EditTrackType = async (model: TrackTypes): Promise<any> => {\r\n    return await api.post(`/tracktypes/update/${model._id}`, model)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst DeleteTrackType = async (id: string): Promise<any> => {\r\n    return await api.post(`/tracktypes/delete/${id}`)\r\n        .then(response => {\r\n            return response;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nconst GetListOption = async (): Promise<any> => {\r\n    return await api.get('/tracktypes/option')\r\n        .then(response => {\r\n            return response.data.items;\r\n        })\r\n        .catch(error => {\r\n            return Promise.reject(error);\r\n        })\r\n}\r\n\r\nexport const trackTypesServices = {\r\n    CreateTrackType,\r\n    GetListTrackType,\r\n    EditTrackType,\r\n    DeleteTrackType,\r\n    GetListOption\r\n}","import { ChangeEvent, FormEvent, Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userService } from \"../../services\";\r\n\r\nexport const ForgotPassword = () => {\r\n    const [inputs, setInputs] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const [res, setRes] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const { email } = inputs;\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (email) {\r\n            setLoading(true);\r\n            const response = await userService.FotgotPassword(email);\r\n            if (response.status === 200) {\r\n                setRes(true);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 d-none d-lg-block bg-password-image\" />\r\n                                <div className=\"col-lg-6\">\r\n                                    <div className=\"p-5\">\r\n                                        {\r\n                                            res === false ?\r\n                                                <Fragment>\r\n                                                    <div className=\"text-center\">\r\n                                                        <h1 className=\"h4 text-gray-900 mb-2\">Bạn quên mật khẩu của mình?</h1>\r\n                                                        <p className=\"mb-4\">\r\n                                                            Chúng tôi hiểu điều gì đang xảy ra với bạn. Hãy nhập email của bạn vào bên dưới\r\n                                                            và ấn khôi phục mật khẩu, bạn sẽ lấy lại được quyền truy cập tài khoản của chính mình!!!\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <form className=\"user\" onSubmit={handleSubmit}>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"email\" name='email' className={'form-control form-control-user ' + (submitted && !email ? 'is-invalid' : '')} onChange={handleChange} id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"example@gmail.com\" />\r\n                                                            {submitted && !email && (\r\n                                                                <div className='invalid-feedback' style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                                    Email là bắt buộc\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <button className=\"btn btn-primary btn-user btn-block\">\r\n                                                            {loading && (\r\n                                                                <span className='spinner-border spinner-border-sm mr-1'></span>\r\n                                                            )}\r\n                                                            Khôi phục mật khẩu\r\n                                                        </button>\r\n                                                    </form>\r\n                                                </Fragment> :\r\n                                                <div className=\"text-center\">\r\n                                                    <h1 className=\"h4 text-gray-900 mb-2\">Kiểm tra hòm thư để tiếp tục?</h1>\r\n                                                    <p className=\"mb-4\">\r\n                                                        Để hoàn thành quá trình lấy lại mật khẩu, vui lòng kiểm tra hòm thư của bạn và tiếp tục!!!\r\n                                                    </p>\r\n                                                </div>\r\n                                        }\r\n                                        <hr />\r\n                                        <div className=\"text-center\">\r\n                                            <Link className=\"small\" to='/login'>\r\n                                                Bạn đã có tài khoản? Hãy đăng nhập!\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { history } from \"../../helpers\";\r\nimport { userService } from \"../../services\";\r\n\r\nexport const ResetPassword = (props: any) => {\r\n    const token  = props.match.params.token;\r\n    const [inputs, setInputs] = useState({\r\n        password: ''\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const { password } = inputs;\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        setLoading(true);\r\n        if (password) {\r\n            setLoading(false);\r\n            const response = await userService.ResetPassWord(password, token);\r\n            console.log(response);\r\n            if(response.data.status === 200){\r\n                setLoading(false);\r\n                history.push('/');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                <div className=\"card-body p-0\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-5 d-none d-lg-block bg-register-image\" />\r\n                        <div className=\"col-lg-7\">\r\n                            <div className=\"p-5\">\r\n                                <div className=\"text-center\">\r\n                                    <h1 className=\"h4 text-gray-900 mb-4\">Khôi phục mật khẩu của bạn!</h1>\r\n                                    <p className=\"mb-4\">\r\n                                        Bằng cách nhập mật khẩu mới của bạn vào ô bên dưới và nhấn khôi phục mật khẩu, bạn sẽ lấy lại được quyền\r\n                                        truy cập tài khoản của mình với mật khẩu vừa nhập!\r\n                                    </p>\r\n                                </div>\r\n                                <form className=\"user\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group row\">\r\n\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" onChange={handleChange} name='password' className={'form-control form-control-user ' + (submitted && !password ? 'is-invalid' : '')} placeholder=\"Nhập mật khẩu mới...\" />\r\n                                        {submitted && !password && (\r\n                                            <div className='invalid-feedback' style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                Mật khẩu là bắt buộc\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <button className=\"btn btn-primary btn-user btn-block\">\r\n                                        {loading && (\r\n                                            <span className='spinner-border spinner-border-sm mr-1'></span>\r\n                                        )}\r\n                                        Khôi phục mật khẩu\r\n                                    </button>\r\n                                </form>\r\n                                <hr />\r\n                                <div className=\"text-center\">\r\n                                    <Link className=\"small\" to='/login'>Bạn đã có tài khoản? Hãy đăng nhập!</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const NotFound = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"text-center\">\r\n                <div className=\"error mx-auto\" data-text={404}>404</div>\r\n                <p className=\"lead text-gray-800 mb-5\">Không tìm thấy trang</p>\r\n                <p className=\"text-gray-500 mb-0\">Có vẻ như bạn đã nhầm đường dẫn, hãy thử nhớ lại đường dẫn xem!!!</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LefMenu = () => {\r\n    const [toggled, setToggled] = useState(false);\r\n\r\n    return (\r\n        <ul className={\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" + (toggled ? ' toggled' : '')} id=\"accordionSidebar\">\r\n            <Link className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\r\n                <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                    <i className=\"fas fa-laugh-wink\" />\r\n                </div>\r\n                <div className=\"sidebar-brand-text mx-3\">MUSIC DISCOVER</div>\r\n            </Link>\r\n            <hr className=\"sidebar-divider\" />\r\n            <div className=\"sidebar-heading\">\r\n                Quản trị hệ thống\r\n            </div>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/'>\r\n                    <i className=\"fas fa-users\" />\r\n                    <span>Người dùng</span>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/singer'>\r\n                    <i className=\"fas fa-users\" />\r\n                    <span>Ca sĩ</span>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/track-types'>\r\n                    <i className=\"fas fa-fw fa-table\" />\r\n                    <span>Thể loại nhạc</span>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/list-track/limit=20&page=1'>\r\n                    <i className=\"fab fa-typo3\" />\r\n                    <span>Bài hát</span>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/playlists'>\r\n                    <i className=\"fab fa-jedi-order\" />\r\n                    <span>Playlist</span>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to='/list-album'>\r\n                    <i className=\"fas fa-compact-disc\" />\r\n                    <span>Album</span>\r\n                </Link>\r\n            </li>\r\n            <hr className=\"sidebar-divider d-none d-md-block\" />\r\n            <div className=\"text-center d-none d-md-inline\" onClick={() => setToggled(!toggled)}>\r\n                <button className=\"rounded-circle border-0\" id=\"sidebarToggle\" />\r\n            </div>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default LefMenu;","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppState } from \"../../../store\";\r\nimport { logout } from \"../../../store/Account/actions\";\r\nimport { AuthenticatedUser } from \"../../../store/Account/types\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { NotifyState } from \"../../../store/Notify/types\";\r\n\r\nconst TopNavbar = () => {\r\n    const user = useSelector<AppState>((state) => state.account.user) as AuthenticatedUser;\r\n    const nofify = useSelector<AppState>((state) => state.notify) as NotifyState;\r\n    const [isShowProfilemenuDropdown, setIsShowProfilemenuDropdown] = useState(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        toast(nofify.message);\r\n    }, [nofify.message])\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    {/* Nav Item - User Information */}\r\n                    <li className={\"nav-item dropdown no-arrow\" + (isShowProfilemenuDropdown ? ' show' : '')}>\r\n                        <label className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                            aria-expanded={isShowProfilemenuDropdown ? 'true' : 'false'} onClick={() => setIsShowProfilemenuDropdown(!isShowProfilemenuDropdown)}>\r\n                            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">{user?.lastname + ' ' + user?.firstname}</span>\r\n                            <img className=\"img-profile rounded-circle\" src={user?.avatar} alt=\"undraw_profile\" />\r\n                        </label>\r\n                        {/* Dropdown - User Information */}\r\n                        <div className={\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" + (isShowProfilemenuDropdown ? ' show' : '')} aria-labelledby=\"userDropdown\">\r\n                            <Link className=\"dropdown-item\" to='/my-profile'  onClick={() => setIsShowProfilemenuDropdown(!isShowProfilemenuDropdown)}>\r\n                                <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" />\r\n                                    Thông tin cá nhân\r\n                            </Link>\r\n                            <div className=\"dropdown-divider\" />\r\n                            <label className=\"dropdown-item\" onClick={() => dispatch(logout())}>\r\n                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" />\r\n                                Đăng xuất\r\n                            </label>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopNavbar;","import { useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../../store\";\r\nimport { AuthenticatedUser } from \"../../../store/Account/types\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ChangeEvent, useState } from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst EditProfile = (props: any) => {\r\n    const user = useSelector<AppState>((state) => state.account.user) as AuthenticatedUser;\r\n\r\n    const [inputs, setInputs] = useState({\r\n        firstname: user.firstname,\r\n        lastname: user.lastname,\r\n        birthDate: moment(user.birthday).format('MM/DD/YYYY'),\r\n        gender: user.gender,\r\n        avatar: user.avatar\r\n    })\r\n\r\n    const RenderOption = () => {\r\n        const genders = ['Nam', 'Nữ', 'Không muốn tiết lộ'] as Array<string>;\r\n        return genders.map((item, index) => {\r\n            return <option key={index} value={item}>{item}</option>\r\n        })\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const handleChangdate = (date: Date | null) => {\r\n        setInputs((inputs) => ({ \r\n            ...inputs, \r\n            birthDate: moment(date?.toString()).format('MM/DD/YYYY')\r\n        }));\r\n    }\r\n    console.log(inputs);\r\n\r\n    return (\r\n        <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n                <h6 className=\"m-0 font-weight-bold text-primary\">Cập nhật thông tin cá nhân</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form>\r\n                    <div className='form-group row'>\r\n                        <div className='col-6'>\r\n                            <label>Họ</label>\r\n                            <div className=\"row m-1\">\r\n                                <input className={\"form-control\"} name='lastname' onChange={handleChange} defaultValue={user.lastname} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-6'>\r\n                            <label>Tên</label>\r\n                            <div className=\"row m-1\">\r\n                                <input className={\"form-control\"} name='firstname' onChange={handleChange} defaultValue={user.firstname} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-group row'>\r\n                        <div>\r\n                            <label>Ngày sinh</label>\r\n                            <div className=\"m-1\" style={{width: '100%'}}>\r\n                                <DatePicker selected={new Date(inputs.birthDate)} dateFormat={'dd/MM/yyyy'}\r\n                                    onChange={(date) => handleChangdate(new Date(moment(date?.toString()).format('MM/DD/YYYY')))} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <label>Giới tính</label>\r\n                            <select name='gender' onChange={handleChange} className=\"m-1 mr-1\" style={{ width: '100%', height: '50%' }}>\r\n                                {RenderOption()}\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-4'>\r\n                            <label>Ảnh đại diện</label>\r\n                            <div className=\"m-1\">\r\n                                <input type='file' accept=\"image/*\" className={\"form-control\"} name='description' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"form-group row justify-content-center\">\r\n                    <button className='btn btn-success mr-1'>\r\n                        Cập nhật thông tin\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppState } from \"../../../store\";\r\nimport { GetMyProfile } from \"../../../store/Account/actions\";\r\nimport { AuthenticatedUser } from \"../../../store/Account/types\";\r\n\r\nconst ViewProfile = () => {\r\n    const user = useSelector<AppState>((state) => state.account.user) as AuthenticatedUser;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetMyProfile());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                    <div className=\"card-body p-0\">\r\n                        {/* Nested Row within Card Body */}\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"p-4\">\r\n                                <div className=\"text-center\">\r\n                                    <img className=\"img-profile rounded-circle\" src={user?.avatar} alt=\"undraw_profile\" />\r\n                                    <h1 className=\"h2 text-gray-900 mb-2\">{user?.lastname + ' ' + user?.firstname}</h1>\r\n                                    <h5 className=\"h5 text-gray-900 mb-2\">{user?.birthday}</h5>\r\n                                    <h5 className=\"h5 text-gray-900 mb-2\">{user?.gender}</h5>\r\n                                </div>\r\n                                <div className=\"form-group row justify-content-center\">\r\n                                    <Link className='btn btn-success mr-1' to='/update-profile'>\r\n                                        Cập nhật thông tin\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ViewProfile;","import React from 'react'\r\n\r\nexport const ListUser = () => {\r\n    return (\r\n        <div>\r\n            <h1>List user!!!</h1>\r\n        </div>\r\n    )\r\n}\r\n","export const LOAD_TRACKTYPE_REQUEST = 'LOAD_TRACKTYPE_REQUEST';\r\nexport const LOAD_TRACKTYPE_SUCCESS = 'LOAD_TRACKTYPE_SUCCESS';\r\nexport const LOAD_TRACKTYPE_FAILURE = 'LOAD_TRACKTYPE_FAILURE';\r\n\r\nexport const DELETE_TRACKTYPE = 'DELETE_TRACKTYPE';\r\n\r\nexport interface TrackTypes {\r\n    _id: string;\r\n    typename: string;\r\n    updatedAt: string;\r\n    createdAt: string;\r\n}\r\n\r\nexport interface TrackTypesState {\r\n    tracktypes: Array<TrackTypes>;\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\ninterface LoadTracktypeRequest {\r\n    type: typeof LOAD_TRACKTYPE_REQUEST;\r\n}\r\n\r\ninterface LoadTracktypeSuccess {\r\n    type: typeof LOAD_TRACKTYPE_SUCCESS;\r\n    payload: {\r\n        tracktypes: Array<TrackTypes>;\r\n    }\r\n}\r\n\r\ninterface LoadTracktypeFailure {\r\n    type: typeof LOAD_TRACKTYPE_FAILURE;\r\n    payload: {\r\n        error: string;\r\n    }\r\n}\r\n\r\ninterface DeleteTrackType {\r\n    type: typeof DELETE_TRACKTYPE;\r\n    payload: {\r\n        trackType: TrackTypes\r\n    }\r\n}\r\n\r\nexport type TrackTypesActionTypes = \r\n    | LoadTracktypeRequest\r\n    | LoadTracktypeSuccess\r\n    | LoadTracktypeFailure\r\n    | DeleteTrackType","export const SHOW_NOTIFY = 'SHOW_NOTIFY';\r\nexport const REFRESH_NOTIFY = 'REFRESH_NOTIFY';\r\n\r\ninterface ShowNotify {\r\n    type: typeof SHOW_NOTIFY;\r\n    payload: {\r\n        message: string\r\n    };\r\n}\r\n\r\ninterface RefreshNotify {\r\n    type: typeof REFRESH_NOTIFY;\r\n    payload: {\r\n        message: null\r\n    };\r\n}\r\n\r\nexport interface NotifyState {\r\n    message: string | null;\r\n}\r\n\r\nexport type NotifyActionTypes = \r\n    | ShowNotify\r\n    | RefreshNotify;","import { Dispatch } from \"redux\";\r\nimport { \r\n    NotifyActionTypes, \r\n    REFRESH_NOTIFY, \r\n    SHOW_NOTIFY\r\n} from \"./types\";\r\n\r\nexport const ShowNotify = (message: string) => {\r\n    return async (dispatch: Dispatch<NotifyActionTypes>) => {\r\n        dispatch ({\r\n            type: REFRESH_NOTIFY,\r\n            payload: {\r\n                message: null\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: SHOW_NOTIFY,\r\n            payload: {\r\n                message: message\r\n            }\r\n        });\r\n    }\r\n}","import { Fragment, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { AppState } from \"../../../store\";\r\nimport { DeleteTrackType, GetListTrackType } from \"../../../store/TrackTypes/actions\";\r\nimport { TrackTypes } from \"../../../store/TrackTypes/types\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { ShowNotify } from \"../../../store/Notify/actions\";\r\n\r\nexport const ListTrackTypes = () => {\r\n    const trackTypes = useSelector<AppState>((state) => state.tracktypes.tracktypes) as Array<TrackTypes>;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetListTrackType());\r\n    }, [dispatch])\r\n\r\n    const submit = (model: TrackTypes) => {\r\n        confirmAlert({\r\n            title: 'Warning!',\r\n            message: `Bạn chắc chắn xóa thể loại: ${model.typename}`,\r\n            buttons: [\r\n                {\r\n                    label: 'Xóa',\r\n                    onClick: () => {\r\n                        dispatch(DeleteTrackType(model._id));\r\n                        dispatch(ShowNotify(`Đã xóa thể loại: ${model.typename}!`));\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Hủy',\r\n                    onClick: () => dispatch(ShowNotify('Đã hủy hành động xóa!'))\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                </div>\r\n                <div className=\"col-6 text-right mb-2\">\r\n                    <Link className=\"btn btn-success\" to='/add-tracktype'>\r\n                        <i className=\"fas fa-plus\" />\r\n                        &nbsp; Thêm mới thể loại\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                    <h6 className=\"m-0 font-weight-bold text-primary\">Danh sách loại nhạc</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mã loại</th>\r\n                                    <th>Tên loại</th>\r\n                                    <th>Ngày tạo</th>\r\n                                    <th>Ngày cập nhật</th>\r\n                                    <th>Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {trackTypes.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{item._id}</td>\r\n                                            <td>{item.typename}</td>\r\n                                            <td>{item.createdAt}</td>\r\n                                            <td>{item.updatedAt}</td>\r\n                                            <td>\r\n                                                <Link className=\"btn btn-success mr-1\" to={'/edit-tracktype/' + item._id.toString()}>\r\n                                                    <i className=\"fas fa-edit\" />\r\n                                                    &nbsp; Cập nhật\r\n                                                </Link>\r\n                                                <button className=\"btn btn-danger ml-1\" onClick={() => submit(item)}>\r\n                                                    <i className=\"far fa-trash-alt\" />\r\n                                                    &nbsp; Xóa\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { trackTypesServices } from \"../../services/tracktypes.services\";\r\nimport {\r\n    DELETE_TRACKTYPE,\r\n    LOAD_TRACKTYPE_FAILURE,\r\n    LOAD_TRACKTYPE_REQUEST,\r\n    LOAD_TRACKTYPE_SUCCESS,\r\n    TrackTypesActionTypes\r\n} from \"./types\";\r\n\r\nexport const GetListTrackType = () => {\r\n    return async (dispatch: Dispatch<TrackTypesActionTypes>) => {\r\n        dispatch({\r\n            type: LOAD_TRACKTYPE_REQUEST,\r\n        });\r\n\r\n        try {\r\n            const response = await trackTypesServices.GetListTrackType();\r\n            dispatch({\r\n                type: LOAD_TRACKTYPE_SUCCESS,\r\n                payload: {\r\n                    tracktypes: response.data.items\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOAD_TRACKTYPE_FAILURE,\r\n                payload: {\r\n                    error: error.toString()\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteTrackType = (id: string) => {\r\n    return async (dispatch: Dispatch<TrackTypesActionTypes>) => {\r\n        const response = await trackTypesServices.DeleteTrackType(id);\r\n        dispatch({\r\n            type: DELETE_TRACKTYPE,\r\n            payload: {\r\n                trackType: response.data.items\r\n            }\r\n        });\r\n    }\r\n}","import { ChangeEvent, FormEvent, Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { trackTypesServices } from '../../../services/tracktypes.services';\r\nimport { history } from '../../../helpers';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\n\r\nexport const AddTrackType = (props: any) => {\r\n    const [inputs, setInputs] = useState({\r\n        typename: ''\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const { typename } = inputs;\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (typename) {\r\n            const response = await trackTypesServices.CreateTrackType(typename);\r\n            if(response.data.status === 201){\r\n                dispatch(ShowNotify('Thêm mới thể loại thành công'));\r\n                history.goBack();\r\n            } \r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Thêm mới thể loại nhạc</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin thể loại</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên thể loại</label>\r\n                            <div className=\"row m-2\">\r\n                                <input type='text' className={\"form-control\" + (submitted && !typename ? ' is-invalid col-11' : '')} onChange={handleChange} name='typename' placeholder='Tên thể loại...' />\r\n                                {submitted && !typename && (\r\n                                    <div className='invalid-feedback col-1'>\r\n                                        Tên thể loại là bắt buộc\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/track-types\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { ChangeEvent, FormEvent, Fragment, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { history } from '../../../helpers';\r\nimport { trackTypesServices } from '../../../services/tracktypes.services';\r\nimport { AppState } from '../../../store';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\nimport { TrackTypes } from '../../../store/TrackTypes/types';\r\n\r\nexport const EditTrackType = (props: any) => {\r\n    const id = props.match.params.id?.toString();\r\n    const trackTypes = useSelector<AppState>((state) => state.tracktypes.tracktypes) as Array<TrackTypes>;\r\n    const FindTrackTypeById = (id: string, listTrackTypes: Array<TrackTypes>) => {\r\n        return listTrackTypes.find(t => {\r\n            return t._id === id\r\n        })\r\n    }\r\n    const [inputs, setInputs] = useState(FindTrackTypeById(id, trackTypes) as TrackTypes);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    \r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (inputs?.typename) {\r\n            var response = await trackTypesServices.EditTrackType(inputs)\r\n            if (response.data.status === 200) {\r\n                dispatch(ShowNotify('Đã cập nhật thông tin thể loại!'));\r\n                history.goBack();\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Thêm mới thể loại nhạc</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin thể loại</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên thể loại</label>\r\n                            <div className=\"row m-2\">\r\n                                <input type='text' defaultValue={inputs?.typename} className={\"form-control\" + (submitted && !inputs?.typename ? ' is-invalid col-11' : '')} onChange={handleChange} name='typename' placeholder='Tên thể loại...' />\r\n                                {submitted && !inputs?.typename && (\r\n                                    <div className='invalid-feedback col-1'>\r\n                                        Tên thể loại là bắt buộc\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/track-types\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","export const LOAD_TRACK_REQUEST = 'LOAD_TRACK_REQUEST';\r\nexport const LOAD_TRACK_SUCCESS = 'LOAD_TRACK_SUCCESS';\r\nexport const LOAD_TRACK_FAILURE = 'LOAD_TRACK_FAILURE';\r\n\r\nexport const DELETE_TRACK = 'DELETE_TRACK';\r\n\r\nexport interface Track {\r\n    _id: string;\r\n    trackname: string;\r\n    description: string;\r\n    background: string;\r\n    tracklink: string;\r\n    total: number;\r\n    singer: Singer;\r\n    tracktype: TrackType\r\n}\r\n\r\ninterface Singer {\r\n    _id: string;\r\n    name: string;\r\n    avatar: string;\r\n}\r\n\r\ninterface TrackType {\r\n    _id: string;\r\n    typename: string;\r\n}\r\n\r\nexport interface MetaData {\r\n    totalDocs: number;\r\n    limit: number;\r\n    totalPages: number;\r\n    page: number;\r\n    pagingCounter: number;\r\n    hasPrevPage: boolean;\r\n    hasNextPage: boolean;\r\n    prevPage: number | null;\r\n    nextPage: number | null;\r\n}\r\n\r\nexport interface TracksState {\r\n    tracks: Array<Track>,\r\n    metaData: MetaData | null,\r\n    loading: boolean,\r\n    error: string | null\r\n}\r\n\r\ninterface LoadTrackRequest {\r\n    type: typeof LOAD_TRACK_REQUEST\r\n}\r\n\r\ninterface LoadTrackSuccess {\r\n    type: typeof LOAD_TRACK_SUCCESS,\r\n    payload: {\r\n        tracks: Array<Track>,\r\n        metaData: MetaData\r\n    }\r\n}\r\n\r\ninterface LoadTrackFailure {\r\n    type: typeof LOAD_TRACK_FAILURE,\r\n    payload: {\r\n        error: string\r\n    }\r\n}\r\n\r\ninterface DeleteTrack {\r\n    type: typeof DELETE_TRACK,\r\n    payload: {\r\n        id: string\r\n    }\r\n}\r\n\r\nexport type TracksActionTypes =\r\n    | LoadTrackRequest\r\n    | LoadTrackSuccess\r\n    | LoadTrackFailure\r\n    | DeleteTrack","import React from 'react';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\n\r\nexport const PlayMusic = (props: any) => {\r\n    const {tracks, index, setIndex} = props;\r\n\r\n    const handleNext = () => {\r\n        if(tracks[index + 1])\r\n            setIndex(index + 1);\r\n        else\r\n            setIndex(0);\r\n    }\r\n\r\n    const handlePrevious = () => {\r\n        if(tracks[index - 1])\r\n            setIndex(index - 1);\r\n        else\r\n            setIndex(tracks.length - 1);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div style={{background: 'white'}}>\r\n            <h4 style={{display: 'flex', justifyContent: 'center'}}>{tracks[index]?.trackname}</h4>\r\n            <AudioPlayer\r\n                autoPlay={false}\r\n                showSkipControls\r\n                showJumpControls={false}\r\n                onClickNext = {handleNext}\r\n                onEnded = {handleNext}\r\n                onClickPrevious = {handlePrevious}\r\n                src={`${process.env.REACT_APP_API_URL}${tracks[index]?.tracklink}`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { ChangeEvent, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppState } from \"../../../store\";\r\nimport { DeleteTrack, GetListTrack } from \"../../../store/Tracks/actions\";\r\nimport { MetaData, Track } from \"../../../store/Tracks/types\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { history } from \"../../../helpers\";\r\nimport Select from 'react-select';\r\nimport { PlayMusic } from \"../Components/PlayMusic\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { ShowNotify } from \"../../../store/Notify/actions\";\r\n\r\nexport const ListTrack = (props: any) => {\r\n    const limit = props.match.params.limit || 20;\r\n    const [page] = useState<number>(props.match.params.page || 1);\r\n    const tracks = useSelector<AppState>((state) => state.tracks.tracks) as Array<Track>;\r\n    const metaData = useSelector<AppState>((state) => state.tracks.metaData) as MetaData;\r\n\r\n    const [index, setIndex] = useState<number>(0);\r\n    const [keyWord, setKeyWord] = useState<string>('');\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetListTrack(limit, page, keyWord));\r\n    }, [dispatch, limit, page, keyWord])\r\n\r\n    const handlePageChange = (pageNumber: number) => {\r\n        history.push(`/list-track/limit=${limit}&page=${pageNumber}`);\r\n    }\r\n\r\n    const handleChange = (selectedOption: any) => {\r\n        history.push(`/list-track/limit=${selectedOption.value}&page=${page}`);\r\n    };\r\n\r\n    const handleChangeKeyword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setKeyWord(value);\r\n    };\r\n\r\n    const handleDelete = (model: any) => {\r\n        confirmAlert({\r\n            title: 'Warning!',\r\n            message: `Bạn chắc chắn xóa thể loại: ${model.typename}`,\r\n            buttons: [\r\n                {\r\n                    label: 'Xóa',\r\n                    onClick: () => {\r\n                        dispatch(DeleteTrack(model._id));\r\n                        dispatch(ShowNotify(`Đã xóa thể loại: ${model.typename}!`));\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Hủy',\r\n                    onClick: () => dispatch(ShowNotify('Đã hủy hành động xóa!'))\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    const options = [\r\n        { value: '3', label: '3' },\r\n        { value: '10', label: '10' },\r\n        { value: '20', label: '20' },\r\n        { value: '30', label: '30' },\r\n        { value: '40', label: '40' },\r\n        { value: '50', label: '50' }\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                </div>\r\n                <div className=\"col-6 text-right mb-2\">\r\n                    <Link className=\"btn btn-success\" to='/add-track'>\r\n                        <i className=\"fas fa-plus\" />\r\n                        &nbsp; Thêm mới bài hát\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                    <h6 className=\"m-0 font-weight-bold text-primary\">Danh sách bài hát</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12 col-md-6 pl-4\">\r\n                            <div className=\"dataTables_length row\">\r\n                                <label>Hiển thị:&nbsp;</label>\r\n                                <Select\r\n                                    className='select-weight'\r\n                                    value={{ value: limit, label: limit }}\r\n                                    onChange={handleChange}\r\n                                    options={options}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-6\">\r\n                            <div id=\"dataTable_filter\" style={{ float: 'right' }}>\r\n                                <label>Tìm kiếm:&nbsp;</label>\r\n                                <input type=\"search\" className='border' placeholder='Tên bài hát' aria-controls=\"dataTable\" onChange={handleChangeKeyword} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Tên bài hát</th>\r\n                                    <th>Mô tả</th>\r\n                                    <th>Ca sĩ</th>\r\n                                    <th>Thể loại</th>\r\n                                    <th>Lượt nghe</th>\r\n                                    <th>Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tracks.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{item.trackname}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{item.singer.name}</td>\r\n                                            <td>{item.tracktype.typename}</td>\r\n                                            <td>{item.total}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger ml-1 mr-1\" onClick={() => handleDelete(item)} >\r\n                                                    <i className=\"far fa-trash-alt\" />\r\n                                                    &nbsp; Xóa\r\n                                                </button>\r\n                                                <button className='btn btn-primary ml-1' onClick={() => setIndex(index)}>\r\n                                                    <i className=\"fas fa-play-circle\" />\r\n                                                    &nbsp; Nghe thử\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        activePage={Number(page)}\r\n                        itemsCountPerPage={Number(limit)}\r\n                        totalItemsCount={metaData?.totalDocs || 0}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <PlayMusic tracks={tracks} index={index} setIndex={setIndex} />\r\n        </Fragment>\r\n    )\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { trackService } from \"../../services\";\r\nimport {\r\n    DELETE_TRACK,\r\n    LOAD_TRACK_FAILURE,\r\n    LOAD_TRACK_REQUEST,\r\n    LOAD_TRACK_SUCCESS,\r\n    TracksActionTypes\r\n} from \"./types\";\r\n\r\nexport const GetListTrack = (limit: number, page: number, keyWord: string) => {\r\n    return async (dispatch: Dispatch<TracksActionTypes>) => {\r\n        dispatch({\r\n            type: LOAD_TRACK_REQUEST\r\n        });\r\n\r\n        try {\r\n            const response = await trackService.GetListTrack(limit, page, keyWord);\r\n            dispatch({\r\n                type: LOAD_TRACK_SUCCESS,\r\n                payload: {\r\n                    tracks: response.data.items,\r\n                    metaData: response.data.meta\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOAD_TRACK_FAILURE,\r\n                payload: {\r\n                    error: error.toString()\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteTrack = (id: string) => {\r\n    return async (dispatch: Dispatch<TracksActionTypes>) => {\r\n        const response = await trackService.DeleteTrack(id);\r\n        if (response.status === 200) {\r\n            dispatch({\r\n                type: DELETE_TRACK,\r\n                payload: {\r\n                    id: id\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export const LOAD_SINGER_REQUEST = 'LOAD_SINGER_REQUEST';\r\nexport const LOAD_SINGER_SUCCESS = 'LOAD_SINGER_SUCCESS';\r\nexport const LOAD_SINGER_FAILURE = 'LOAD_SINGER_FAILURE';\r\n\r\nexport interface Singer {\r\n    _id: string,\r\n    name: string,\r\n    description: string,\r\n    avatar: string,\r\n    createdAt: string,\r\n    updatedAt: string\r\n}\r\n\r\nexport interface SingersState {\r\n    singers: Array<Singer>,\r\n    loading: boolean,\r\n    error: string | null\r\n}\r\n\r\ninterface LoadSingerRequest {\r\n    type: typeof LOAD_SINGER_REQUEST,\r\n    payload:{\r\n        loading: boolean\r\n    }\r\n}\r\n\r\ninterface LoadSingerSuccess {\r\n    type: typeof LOAD_SINGER_SUCCESS,\r\n    payload:{\r\n        singers: Array<Singer>,\r\n        loading: boolean\r\n    }\r\n}\r\n\r\ninterface LoadSingerFailure {\r\n    type: typeof LOAD_SINGER_FAILURE,\r\n    payload:{\r\n        loading: boolean,\r\n        error: string\r\n    }\r\n}\r\n\r\nexport type SingersActionTypes = \r\n    | LoadSingerRequest\r\n    | LoadSingerSuccess\r\n    | LoadSingerFailure;","import { Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppState } from '../../../store';\r\nimport { GetListSinger } from '../../../store/Singers/actions';\r\nimport { Singer } from '../../../store/Singers/types';\r\nimport moment from 'moment';\r\n\r\nexport const ListSinger = () => {\r\n    const singers = useSelector<AppState>((state) => state.singers.singers) as Array<Singer>;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetListSinger());\r\n    }, [dispatch])\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                </div>\r\n                <div className=\"col-6 text-right mb-2\">\r\n                    <Link className=\"btn btn-success\" to='/singer/create'>\r\n                        <i className=\"fas fa-plus\" />\r\n                        &nbsp; Thêm mới ca sĩ\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                    <h6 className=\"m-0 font-weight-bold text-primary\">Danh sách ca sĩ</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Tên ca sĩ</th>\r\n                                    <th>Hình ảnh</th>\r\n                                    <th>Tiểu sử</th>\r\n                                    <th>Ngày tạo</th>\r\n                                    <th>Ngày cập nhật</th>\r\n                                    <th>Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {singers.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{item.name}</td>\r\n                                            \r\n                                            <td>\r\n                                                <img src={process.env.REACT_APP_API_URL + item.avatar} alt={item.name} />\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{moment(item.createdAt).format('DD/MM/YYYY')}</td>\r\n                                            <td>{moment(item.updatedAt).format('DD/MM/YYYY')}</td>\r\n                                            <td>\r\n                                                <Link className=\"btn btn-success mr-1\" to={'/singer/edit/' + item._id.toString()}>\r\n                                                    <i className=\"fas fa-edit\" />\r\n                                                    &nbsp; Cập nhật\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { singerService } from \"../../services\";\r\nimport {\r\n    LOAD_SINGER_FAILURE,\r\n    LOAD_SINGER_REQUEST,\r\n    LOAD_SINGER_SUCCESS,\r\n    SingersActionTypes\r\n} from \"./types\";\r\n\r\nexport const GetListSinger = () => {\r\n    return async (dispatch: Dispatch<SingersActionTypes>) => {\r\n        dispatch({\r\n            type: LOAD_SINGER_REQUEST,\r\n            payload: {\r\n                loading: true\r\n            }\r\n        });\r\n\r\n        try {\r\n            const response = await singerService.GetListSinger();\r\n            dispatch({\r\n                type: LOAD_SINGER_SUCCESS,\r\n                payload: {\r\n                    loading: false,\r\n                    singers: response.data.items\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOAD_SINGER_FAILURE,\r\n                payload: {\r\n                    loading: false,\r\n                    error: error.toString()\r\n                },\r\n            });\r\n        }\r\n    }\r\n}","import React, { ChangeEvent, FormEvent, Fragment, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { history } from '../../../helpers';\r\nimport { singerService } from '../../../services';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\n\r\nexport const AddSinger = () => {\r\n    const [inputs, setInputs] = useState({\r\n        name: '',\r\n        description: ''\r\n    });\r\n    const [formData, setFormData] = useState(new FormData());\r\n    const [selectImages, setSelectimages] = useState(Array<string>());\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const { name, description } = inputs;\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n    const imageHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const fileArray = [];\r\n        const formData = new FormData();\r\n        if (e.target.files) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                fileArray.push(URL.createObjectURL(e.target.files[i]));\r\n                formData.append(\"avatar\", e.target.files[i], e.target.files[i].name);\r\n            }\r\n            setSelectimages(fileArray);\r\n        }\r\n        setFormData(formData);\r\n    }\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (name && description) {\r\n            const formDataSubmit = formData;\r\n            formDataSubmit.append('name', inputs.name);\r\n            formDataSubmit.append('description', inputs.description);\r\n            const response = await singerService.CreateSinger(formDataSubmit);\r\n            if(response.data.status === 201){\r\n                 dispatch(ShowNotify('Đã thêm mới ca sĩ!'));\r\n                history.goBack();\r\n            } \r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Thêm mới ca sĩ</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin ca sĩ</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên ca sĩ</label>\r\n                            <div className=\"row m-2\">\r\n                                <input type='text' className={\"form-control\" + (submitted && !name ? ' is-invalid col-11' : '')} onChange={handleChange} name='name' placeholder='Tên ca sĩ' />\r\n                                {submitted && !name && (\r\n                                    <div className='invalid-feedback col-1'>\r\n                                        Tên ca sĩ là bắt buộc\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Giới thiệu</label>\r\n                            <div className=\"row m-2\">\r\n                                <input type='text' className={\"form-control\" + (submitted && !description ? ' is-invalid col-11' : '')} onChange={handleChange} name='description' placeholder='Giới thiệu' />\r\n                                {submitted && !description && (\r\n                                    <div className='invalid-feedback col-1'>\r\n                                        Giới thiệu là bắt buộc\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Ảnh đại diện</label>\r\n                            <input type='file' className=\"form-control\" onChange={imageHandleChange} />\r\n                        </div>\r\n                        <div className='form-group row' style={{ justifyContent: 'center' }}>\r\n                            {selectImages.map((item, index) => {\r\n                                return (\r\n                                    <img className=\"col-2\" key={index} src={item} alt=\"preview\" />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/singer\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { ChangeEvent, FormEvent, Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { history } from '../../../helpers';\r\nimport { singerService } from '../../../services';\r\nimport { AppState } from '../../../store';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\nimport { Singer } from '../../../store/Singers/types';\r\n\r\nexport const EditSinger = (props: any) => {\r\n    const id = props.match.params.id;\r\n    const dispatch = useDispatch();\r\n    const [selectImages, setSelectimages] = useState(Array<string>());\r\n    const [formData, setFormData] = useState(new FormData());\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const singers = useSelector<AppState>((state) => state.singers.singers) as Array<Singer>;\r\n\r\n    const getSingerById = (id: string, listSinger: Array<Singer>) => {\r\n        var result = listSinger.find(p => {\r\n            return p._id === id\r\n        });\r\n        return result;\r\n    }\r\n\r\n    const [singer] = useState(getSingerById(id.toString(), singers) as Singer);\r\n\r\n    const [formInput, setFormInput] = useState({\r\n        name: singer?.name,\r\n        description: singer?.description\r\n    });\r\n\r\n    useEffect(() => {\r\n        var temp = Array<string>();\r\n        temp.push(`${process.env.REACT_APP_API_URL}${singer?.avatar}`)\r\n        setSelectimages(temp);\r\n    }, [dispatch, singer?.avatar])\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormInput((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n\r\n    const imageHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const fileArray = [];\r\n        const formData = new FormData();\r\n        if (e.target.files) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                fileArray.push(URL.createObjectURL(e.target.files[i]));\r\n                formData.append(\"avatar\", e.target.files[i], e.target.files[i].name);\r\n            }\r\n            setSelectimages(fileArray);\r\n        }\r\n        setFormData(formData);\r\n    }\r\n\r\n    const { name, description } = formInput;\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (name && description) {\r\n            const formDataSubmit = formData;\r\n            formDataSubmit.append('name', formInput.name);\r\n            formDataSubmit.append('description', formInput.description);\r\n            const response = await singerService.UpdateSinger(singer?._id, formDataSubmit);\r\n            if(response.data.status === 201){\r\n                dispatch(ShowNotify('Cập nhật thông tin thành công!'));\r\n                history.goBack();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Cập nhật thông tin</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin ca sĩ</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên ca sĩ</label>\r\n                            <div className=\"row m-2\">\r\n                                <input type='text' defaultValue={singer?.name} className={\"form-control\" + (submitted && !name ? ' is-invalid col-11' : '')} onChange={handleChange} name='name' placeholder='Tên ca sĩ' />\r\n                                {submitted && !name && (\r\n                                    <div className='invalid-feedback col-1'>\r\n                                        Tên ca sĩ là bắt buộc\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Giới thiệu</label>\r\n                            <div className=\"row m-2\">\r\n                                <textarea defaultValue={singer?.description} className={\"form-control\" + (submitted && !description ? ' is-invalid col-11' : '')} onChange={handleChange} name='description' placeholder='Giới thiệu' />\r\n                                {submitted && !description && (\r\n                                    <div className='invalid-feedback col-1'>\r\n                                        Giới thiệu là bắt buộc\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Ảnh đại diện</label>\r\n                            <input type='file' className=\"form-control\" onChange={imageHandleChange} />\r\n                        </div>\r\n                        <div className='form-group row' style={{ justifyContent: 'center' }}>\r\n                            {selectImages.map((item, index) => {\r\n                                return (\r\n                                    <img className=\"col-2\" key={index} src={item} alt=\"preview\" />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/singer\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { ChangeEvent, FormEvent, Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { history } from '../../../helpers';\r\nimport { singerService, trackService, trackTypesServices } from '../../../services';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\n\r\nexport const AddTrack = () => {\r\n    const [inputs, setInputs] = useState({\r\n        trackname: '',\r\n        description: '',\r\n    });\r\n    const [singer, setSinger] = useState<any>();\r\n    const [trackType, setTrackType] = useState<any>();\r\n    const [singerOption, setSingerOption] = useState<any>([]);\r\n    const [trackTypeOption, setTrackTypeOption] = useState<any>([]);\r\n    const [formData, setFormData] = useState(new FormData());\r\n    const [selectImages, setSelectimages] = useState(Array<string>());\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [music, setMusic] = useState<any>(false);\r\n\r\n    useEffect(() => {\r\n        async function getSingerOption() {\r\n            let response = await singerService.GetListOption()\r\n            let option = new Array<any>();\r\n            response.forEach((element: any) => {\r\n                option.push({ value: element._id, label: element.name })\r\n            });\r\n            setSingerOption(option);\r\n        }\r\n        async function getTrackTypeOption() {\r\n            let response = await trackTypesServices.GetListOption();\r\n            let option = new Array<any>();\r\n            response.forEach((element: any) => {\r\n                option.push({ value: element._id, label: element.typename })\r\n            });\r\n            setTrackTypeOption(option);\r\n        }\r\n        getSingerOption();\r\n        getTrackTypeOption();\r\n    }, [])\r\n\r\n    const { trackname, description } = inputs;\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n    const imageHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let fileArray = [];\r\n        let form = formData;\r\n        form.delete('background');\r\n        if (e.target.files) {\r\n            fileArray.push(URL.createObjectURL(e.target.files[0]));\r\n            form.append(\"background\", e.target.files[0], e.target.files[0].name);\r\n            setSelectimages(fileArray);\r\n        }\r\n        setFormData(form);\r\n    }\r\n    const musicHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let form = formData;\r\n        form.delete(\"music\")\r\n        if (e.target.files) {\r\n            form.append(\"music\", e.target.files[0], e.target.files[0].name);\r\n            setMusic(true);\r\n        }\r\n        setFormData(form);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (trackname && description && singer && trackType && music && selectImages) {\r\n            const formDataSubmit = formData;\r\n            formDataSubmit.append('trackname', inputs.trackname);\r\n            formDataSubmit.append('description', inputs.description);\r\n            formDataSubmit.append('singer', singer);\r\n            formDataSubmit.append('tracktype', trackType);\r\n            const response = await trackService.CreateTrack(formDataSubmit);\r\n            if(response.data.status === 201){\r\n                dispatch(ShowNotify('Thêm mới bài hát thành công!'));\r\n                history.goBack();\r\n            } \r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Thêm mới bài hát</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin bài hát</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên bài hát</label>\r\n                            <input type='text' className={\"form-control\" + (submitted && !trackname ? ' is-invalid' : '')} onChange={handleChange} name='trackname' placeholder='Tên bài hát' />\r\n                            {submitted && !trackname && (<small style={{ color: 'red' }}>Tên bài hát là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Giới thiệu</label>\r\n                            <textarea rows={5} className={\"form-control\" + (submitted && !description ? ' is-invalid' : '')} onChange={handleChange} name='description' placeholder='Mô tả' />\r\n                            {submitted && !description && (<small style={{ color: 'red' }}>Giới thiệu là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-4\">\r\n                                <label>Thể loại</label>\r\n                                <div className=\"form-group\">\r\n                                    <Select options={trackTypeOption} name='tracktype' placeholder='Chọn thể loại nhạc' onChange={selectedOption => setTrackType(selectedOption?.value)} />\r\n                                    {submitted && !trackType && (<small style={{ color: 'red' }}>Thể loại là bắt buộc</small>)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label>Ca sĩ</label>\r\n                                <div className=\"form-group\">\r\n                                    <Select options={singerOption} name='singer' placeholder='Chọn ca sĩ' onChange={selectedOption => setSinger(selectedOption?.value)} />\r\n                                    {submitted && !singer && (<small style={{ color: 'red' }}>Thể loại là bắt buộc</small>)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label>Chọn bài hát</label>\r\n                                <div className=\"form-group\">\r\n                                    <input type='file' accept='audio/*' className={\"form-control\" + (submitted && !music ? ' is-invalid' : '')} onChange={musicHandleChange} />\r\n                                    {submitted && !music && (<small style={{ color: 'red' }}>Bài hát là bắt buộc</small>)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Ảnh đại diện</label>\r\n                            <input type=\"file\" accept=\"image/*\" className={\"form-control\" + (submitted && (selectImages.length === 0) ? ' is-invalid' : '')} onChange={imageHandleChange} />\r\n                            {submitted && (selectImages.length === 0) && (<small style={{ color: 'red' }}>Bài hát là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group row' style={{ justifyContent: 'center' }}>\r\n                            {selectImages?.map((item, index) => {\r\n                                return (\r\n                                    <img className=\"col-2\" key={index} src={item} alt=\"preview\" />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/singer\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","export const LOAD_PLAYLIST_SUCCESS = 'LOAD_PLAYLIST_SUCCESS';\r\nexport const LOAD_PLAYLIST_REQUEST = 'LOAD_PLAYLIST_REQUEST';\r\nexport const LOAD_PLAYLIST_FAILURE = 'LOAD_PLAYLIST_FAILURE';\r\n\r\nexport interface MetaData {\r\n    totalDocs: number;\r\n    limit: number;\r\n    totalPages: number;\r\n    page: number;\r\n    pagingCounter: number;\r\n    hasPrevPage: boolean;\r\n    hasNextPage: boolean;\r\n    prevPage: number | null;\r\n    nextPage: number | null;\r\n}\r\n\r\nexport interface Playlist {\r\n    tracks: Array<any>,\r\n    total: number,\r\n    _id: string,\r\n    playlistname: string,\r\n    description: string,\r\n    background: string,\r\n    createdAt: string\r\n}\r\n\r\nexport interface PlaylistsState {\r\n    playlists: Array<Playlist>,\r\n    metaData: MetaData | null,\r\n    loading: boolean,\r\n    error: string | null\r\n}\r\n\r\ninterface LoadPlaylistRequest {\r\n    type: typeof LOAD_PLAYLIST_REQUEST\r\n}\r\n\r\ninterface LoadPlaylistSuccess {\r\n    type: typeof LOAD_PLAYLIST_SUCCESS,\r\n    payload: {\r\n        playlists: Array<Playlist>,\r\n        metaData: MetaData\r\n    }\r\n}\r\n\r\ninterface LoadPlaylistFailure {\r\n    type: typeof LOAD_PLAYLIST_FAILURE,\r\n    payload: {\r\n        error: string\r\n    }\r\n}\r\n\r\nexport type PlaylistsActionTypes =\r\n    | LoadPlaylistRequest\r\n    | LoadPlaylistSuccess\r\n    | LoadPlaylistFailure","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { ChangeEvent, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppState } from \"../../../store\";\r\nimport { MetaData } from \"../../../store/Tracks/types\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { GetListPlaylist } from \"../../../store/Playlist/actions\";\r\nimport { Playlist } from \"../../../store/Playlist/types\";\r\nimport moment from \"moment\";\r\n\r\nconst Playlists = (props: any) => {\r\n    const playlists = useSelector<AppState>((state) => state.playlists.playlists) as Array<Playlist>;\r\n    const metaData = useSelector<AppState>((state) => state.playlists.metaData) as MetaData;\r\n    const [keyWord, setKeyWord] = useState<String>('');\r\n    const [page, setPage] = useState<number>(1);\r\n\r\n    const [index, setIndex] = useState<number>(0);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetListPlaylist(20, page, keyWord));\r\n    }, [dispatch, keyWord, page])\r\n\r\n    const handlePageChange = (pageNumber: number) => {\r\n        setPage(pageNumber);\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setKeyWord(value);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                </div>\r\n                <div className=\"col-6 text-right mb-2\">\r\n                    <Link className=\"btn btn-success\" to='/create-playlist'>\r\n                        <i className=\"fas fa-plus\" />\r\n                        &nbsp; Tạo mới playlist\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                    <h6 className=\"m-0 font-weight-bold text-primary\">Danh sách playlist</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12 col-md-6 pl-4\">\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-6\">\r\n                            <div id=\"dataTable_filter\" style={{ float: 'right' }}>\r\n                                <label>Tìm kiếm:&nbsp;</label>\r\n                                <input type=\"search\" className='border' placeholder='Tên bài hát' aria-controls=\"dataTable\" onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Tên playlist</th>\r\n                                    <th>Hình ảnh</th>\r\n                                    <th>Mô tả</th>\r\n                                    <th>Ngày tạo</th>\r\n                                    <th>Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {playlists?.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{item.playlistname}</td>\r\n                                            <td>\r\n                                                <img style={{ width: '150px' }} src={process.env.REACT_APP_API_URL + item.background} alt={item.playlistname} />\r\n                                            </td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{moment(item.createdAt).format('DD/MM/YYYY')}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger ml-1 mr-1\" >\r\n                                                    <i className=\"far fa-trash-alt\" />\r\n                                                    &nbsp; Xóa\r\n                                                </button>\r\n                                                <Link className='btn btn-primary ml-1' to={`/edit-playlist/${item._id}`}>\r\n                                                    <i className=\"fas fa-play-circle\" />\r\n                                                    &nbsp; Chỉnh sửa\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        activePage={metaData?.page}\r\n                        itemsCountPerPage={metaData?.limit}\r\n                        totalItemsCount={metaData?.totalDocs | 0}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Playlists;","import { playlistsServices } from './../../services/playlist.services';\r\nimport { \r\n    PlaylistsActionTypes,\r\n    LOAD_PLAYLIST_SUCCESS,\r\n    LOAD_PLAYLIST_REQUEST,\r\n    LOAD_PLAYLIST_FAILURE\r\n} from './types';\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const GetListPlaylist = (limit: number, page: number, keyWord: String) => {\r\n    return async (dispatch: Dispatch<PlaylistsActionTypes>) => {\r\n        dispatch({\r\n            type: LOAD_PLAYLIST_REQUEST\r\n        });\r\n\r\n        try {\r\n            const response = await playlistsServices.GetListPlaylist(limit, page, keyWord);\r\n            dispatch({\r\n                type: LOAD_PLAYLIST_SUCCESS,\r\n                payload: {\r\n                    playlists: response.data.items,\r\n                    metaData: response.data.meta\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOAD_PLAYLIST_FAILURE,\r\n                payload: {\r\n                    error: error.toString()\r\n                },\r\n            });\r\n        }\r\n    }\r\n}","import { ChangeEvent, FormEvent, Fragment, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { playlistsServices } from '../../../services/playlist.services';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\nimport { history } from '../../../helpers';\r\n\r\nconst CreatePlaylist = () => {\r\n    const [inputs, setInputs] = useState({\r\n        playlistname: '',\r\n        description: '',\r\n    });\r\n    const [formData, setFormData] = useState(new FormData());\r\n    const [selectImages, setSelectimages] = useState(Array<string>());\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const { playlistname, description } = inputs;\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n    const imageHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let fileArray = [];\r\n        let form = formData;\r\n        form.delete('background');\r\n        if (e.target.files) {\r\n            fileArray.push(URL.createObjectURL(e.target.files[0]));\r\n            form.append(\"background\", e.target.files[0], e.target.files[0].name);\r\n            setSelectimages(fileArray);\r\n        }\r\n        setFormData(form);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (playlistname && description && selectImages) {\r\n            const formDataSubmit = formData;\r\n            formDataSubmit.append('playlistname', playlistname);\r\n            formDataSubmit.append('description', description);\r\n            const response = await playlistsServices.CreatePlayList(formDataSubmit);\r\n            if(response.data.status === 200){\r\n                dispatch(ShowNotify('Tạo mới playlist thành công!'));\r\n                history.goBack();\r\n            } \r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Tạo mới playlist</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin playlist</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên playlist</label>\r\n                            <input type='text' className={\"form-control\" + (submitted && !playlistname ? ' is-invalid' : '')} onChange={handleChange} name='playlistname' placeholder='Tên playlist' />\r\n                            {submitted && !playlistname && (<small style={{ color: 'red' }}>Tên playlist là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Giới thiệu</label>\r\n                            <textarea rows={5} className={\"form-control\" + (submitted && !description ? ' is-invalid' : '')} onChange={handleChange} name='description' placeholder='Mô tả' />\r\n                            {submitted && !description && (<small style={{ color: 'red' }}>Giới thiệu là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Ảnh bìa</label>\r\n                            <input type=\"file\" accept=\"image/*\" className={\"form-control\" + (submitted && (selectImages.length === 0) ? ' is-invalid' : '')} onChange={imageHandleChange} />\r\n                            {submitted && (selectImages.length === 0) && (<small style={{ color: 'red' }}>Ảnh bìa là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group row' style={{ justifyContent: 'center' }}>\r\n                            {selectImages?.map((item, index) => {\r\n                                return (\r\n                                    <img className=\"col-2\" key={index} src={item} alt=\"preview\" />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/playlists\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreatePlaylist;","import{ Fragment } from 'react';\r\nimport { playlistsServices } from '../../../services/playlist.services';\r\n\r\nconst TrackItem = (props: any) => {\r\n\r\n    const handleRemove = async (track_id: string) => {\r\n        const response = await playlistsServices.RemoveTrack(props.id, track_id);\r\n        if (response.status === 200) {\r\n            props.setReRender(!props.reRender);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-11 card shadow\" style={{ margin: '0 auto 10px auto', display: 'inline-block' }}>\r\n                    <img\r\n                        className='img-screen-center'\r\n                        src={`${process.env.REACT_APP_API_URL}${props.track.background.toString()}`}\r\n                        alt={props.track.trackname}\r\n                        style={{ width: '40px', height: '40px', borderRadius: '50%', margin: '5px 40px 5px auto' }} />\r\n                    <label style={{ color: 'black', fontSize: '20px' }}>\r\n                        {props.track.trackname}\r\n                    </label>\r\n                    <label style={{ color: 'black', fontSize: '18px', marginLeft: '40px' }}>\r\n                        {props.track.singer.name}\r\n                    </label>\r\n                    <button className='btn btn-danger' style={{ float: 'right', marginTop: '6px' }} onClick={() => handleRemove(props.track._id)}>\r\n                        <i className=\"far fa-trash-alt\" />&nbsp;Xóa khỏi playlist\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TrackItem;","import { Fragment } from 'react'\r\nimport { playlistsServices } from '../../../services/playlist.services';\r\n\r\nconst TrackItemAddPlaylist = (props: any) => {\r\n    const handleAddTrackToPlaylist = async (track_id: string) => {\r\n        const response = await playlistsServices.AddTrackToPlaylist(props.id, track_id);\r\n        if (response.status === 200) {\r\n            props.setReRender(!props.reRender);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-11 card shadow\" style={{ margin: '0 auto 10px auto', display: 'inline-block' }}>\r\n                    <img\r\n                        className='img-screen-center'\r\n                        src={`${process.env.REACT_APP_API_URL}${props.track.background.toString()}`}\r\n                        alt={props.track.trackname}\r\n                        style={{ width: '40px', height: '40px', borderRadius: '50%', margin: '5px 40px 5px auto' }} />\r\n                    <label style={{ color: 'black', fontSize: '20px' }}>\r\n                        {props.track.trackname}\r\n                    </label>\r\n                    <label style={{ color: 'black', fontSize: '18px', marginLeft: '40px' }}>\r\n                        {props.track.singer.name}\r\n                    </label>\r\n                    <button className='btn btn-success' style={{ float: 'right', marginTop: '6px' }} onClick={() => handleAddTrackToPlaylist(props.track._id)}>\r\n                        <i className=\"fas fa-plus\" />&nbsp;Thêm vào playlist\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TrackItemAddPlaylist;","import { ChangeEvent, Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { playlistsServices } from '../../../services/playlist.services';\r\nimport { Playlist } from '../../../store/Playlist/types';\r\nimport { MetaData, Track } from '../../../store/Tracks/types';\r\nimport TrackItem from '../Components/TrackItem';\r\nimport Pagination from \"react-js-pagination\";\r\nimport TrackItemAddPlaylist from '../Components/TrackItemAddPlaylist';\r\n\r\nconst EditPlaylist = (props: any) => {\r\n    const [playlist, setPlaylist] = useState<Playlist>({\r\n        tracks: [],\r\n        total: 0,\r\n        _id: '',\r\n        playlistname: '',\r\n        description: '',\r\n        background: '',\r\n        createdAt: ''\r\n    });\r\n    const { id } = props.match.params;\r\n    const [page, setPage] = useState<number>(1);\r\n    const [keyWord, setKeyWord] = useState<string>('');\r\n    const [reRender, setReRender] = useState<boolean>(false)\r\n    const [listTrack, setListTrack] = useState<Array<Track>>([]);\r\n    const [metaData, setMetaData] = useState<MetaData>({\r\n        totalDocs: 0,\r\n        limit: 25,\r\n        totalPages: 1,\r\n        page: 1,\r\n        pagingCounter: 1,\r\n        hasPrevPage: false,\r\n        hasNextPage: false,\r\n        prevPage: 0,\r\n        nextPage: 0,\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let response = await playlistsServices.GetPlaylistById(id);\r\n            setPlaylist(response.data.items);\r\n\r\n            let result = await playlistsServices.GetOptionTrack(id, page, keyWord);\r\n            setListTrack(result.data.items);\r\n            setMetaData(result.data.meta)\r\n        }\r\n        fetchData();\r\n    }, [dispatch, id, keyWord, page, reRender]);\r\n\r\n    const handlePageChange = (pageNumber: number) => {\r\n        setPage(pageNumber);\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setKeyWord(value);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 card shadow\">\r\n                    <img\r\n                        className='img-screen-center'\r\n                        src={`${process.env.REACT_APP_API_URL}${playlist.background.toString()}`}\r\n                        alt={playlist.playlistname}\r\n                        style={{ width: '200px', height: '200px', borderRadius: '25px', paddingTop: '5px' }} />\r\n                    <label className='text-screen-center text-bold f-1' style={{ marginTop: '10px', marginBottom: '0px' }}>\r\n                        {playlist.playlistname}\r\n                    </label>\r\n                    <label className='text-screen-center text-normal' style={{ marginTop: '0px', marginBottom: '0px' }}>\r\n                        {playlist.createdAt}\r\n                    </label>\r\n                    <label className='text-screen-center text-normal' style={{ marginTop: '0px', marginBottom: '0px' }}>\r\n                        {playlist.description}\r\n                    </label>\r\n                    <hr />\r\n                    <div style={{ width: '100%', height: '500px', overflowY: 'scroll', overflowX: 'hidden', paddingTop: '10px' }}>\r\n                        {playlist.tracks?.map((track, index) => {\r\n                            return <TrackItem\r\n                                key={index}\r\n                                track={track}\r\n                                id={playlist._id} \r\n                                reRender={reRender}\r\n                                setReRender={setReRender} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6 card shadow\">\r\n                    <div id=\"dataTable_filter\" style={{ margin: '10px 10px 5px auto', color: 'black' }}>\r\n                        <label>Tìm kiếm:&nbsp;</label>\r\n                        <input type=\"search\" className='border' placeholder='Tên bài hát' aria-controls=\"dataTable\" onChange={handleChange} />\r\n                    </div>\r\n                    <div style={{ width: '100%', height: '730px', overflowY: 'scroll', overflowX: 'hidden', paddingTop: '10px' }}>\r\n                        {listTrack?.map((track, index) => {\r\n                            return <TrackItemAddPlaylist\r\n                                key={index}\r\n                                track={track}\r\n                                id={playlist._id}\r\n                                reRender={reRender}\r\n                                setReRender={setReRender} />\r\n                        })}\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Pagination\r\n                            itemClass=\"page-item\"\r\n                            linkClass=\"page-link\"\r\n                            activePage={metaData?.page}\r\n                            itemsCountPerPage={metaData?.limit}\r\n                            totalItemsCount={metaData?.totalDocs | 0}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditPlaylist;","import { ChangeEvent, FormEvent, Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ShowNotify } from '../../../store/Notify/actions';\r\nimport { history } from '../../../helpers';\r\nimport { albumsServices, singerService } from '../../../services';\r\nimport Select from 'react-select';\r\n\r\nconst CreateAlbum = () => {\r\n    const [inputs, setInputs] = useState({\r\n        albumname: '',\r\n        description: '',\r\n    });\r\n    const [formData, setFormData] = useState(new FormData());\r\n    const [selectImages, setSelectimages] = useState(Array<string>());\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [singerOption, setSingerOption] = useState<any>([]);\r\n    const [singer, setSinger] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        async function getSingerOption() {\r\n            let response = await singerService.GetListOption()\r\n            let option = new Array<any>();\r\n            response.forEach((element: any) => {\r\n                option.push({ value: element._id, label: element.name })\r\n            });\r\n            setSingerOption(option);\r\n        }\r\n        getSingerOption();\r\n    }, [])\r\n\r\n    const { albumname, description } = inputs;\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    };\r\n    const imageHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let fileArray = [];\r\n        let form = formData;\r\n        form.delete('background');\r\n        if (e.target.files) {\r\n            fileArray.push(URL.createObjectURL(e.target.files[0]));\r\n            form.append(\"background\", e.target.files[0], e.target.files[0].name);\r\n            setSelectimages(fileArray);\r\n        }\r\n        setFormData(form);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        if (albumname && description && selectImages) {\r\n            const formDataSubmit = formData;\r\n            formDataSubmit.append('albumname', albumname);\r\n            formDataSubmit.append('description', description);\r\n            singer.forEach((element: any) => {\r\n                formDataSubmit.append('singers', element.value)\r\n            });\r\n            const response = await albumsServices.CreateAlbum(formDataSubmit);\r\n            if(response.data.status === 201){\r\n                dispatch(ShowNotify('Tạo mới album thành công!'));\r\n                history.goBack();\r\n            } \r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='h3 mb-4 text-gray-800'>Tạo mới Album</h1>\r\n            <div className='card'>\r\n                <div className='card-header'>Thông tin album</div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <label>Tên album</label>\r\n                            <input type='text' className={\"form-control\" + (submitted && !albumname ? ' is-invalid' : '')} onChange={handleChange} name='albumname' placeholder='Tên playlist' />\r\n                            {submitted && !albumname && (<small style={{ color: 'red' }}>Tên playlist là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Giới thiệu</label>\r\n                            <textarea rows={5} className={\"form-control\" + (submitted && !description ? ' is-invalid' : '')} onChange={handleChange} name='description' placeholder='Mô tả' />\r\n                            {submitted && !description && (<small style={{ color: 'red' }}>Giới thiệu là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                        <label>Ca sĩ</label>\r\n                                <div className=\"form-group\">\r\n                                    <Select options={singerOption} isMulti={true} name='singer' placeholder='Chọn ca sĩ' onChange={selectedOption => setSinger(selectedOption)} className={(submitted && singer.length === 0 ? ' is-invalid' : '')} />\r\n                                    {submitted && singer.length === 0 && (<small style={{ color: 'red' }}>Ca sĩ là bắt buộc</small>)}\r\n                                </div>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Ảnh bìa</label>\r\n                            <input type=\"file\" accept=\"image/*\" className={\"form-control\" + (submitted && (selectImages.length === 0) ? ' is-invalid' : '')} onChange={imageHandleChange} />\r\n                            {submitted && (selectImages.length === 0) && (<small style={{ color: 'red' }}>Ảnh bìa là bắt buộc</small>)}\r\n                        </div>\r\n                        <div className='form-group row' style={{ justifyContent: 'center' }}>\r\n                            {selectImages?.map((item, index) => {\r\n                                return (\r\n                                    <img className=\"col-2\" key={index} src={item} alt=\"preview\" />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary mr-1' type='submit'>\r\n                                <i className=\"fas fa-save\" />\r\n                                &nbsp; Lưu\r\n                            </button>\r\n                            <Link className='btn btn-danger ml-1' to=\"/albums\">\r\n                                <i className=\"fas fa-window-close\" />\r\n                                &nbsp; Hủy\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateAlbum;","export const LOAD_ALBUM_REQUEST = 'LOAD_ALBUM_REQUEST';\r\nexport const LOAD_ALBUM_SUCCESS = 'LOAD_ALBUM_SUCCESS';\r\nexport const LOAD_ALBUM_FAILURE = 'LOAD_ALBUM_FAILURE';\r\n\r\nexport interface Album {\r\n    _id: string;\r\n    albumname: string;\r\n    description: string;\r\n    background: string;\r\n    updatedAt: string;\r\n    createdAt: string;\r\n}\r\n\r\nexport interface MetaData {\r\n    totalDocs: number;\r\n    limit: number;\r\n    totalPages: number;\r\n    page: number;\r\n    pagingCounter: number;\r\n    hasPrevPage: boolean;\r\n    hasNextPage: boolean;\r\n    prevPage: number | null;\r\n    nextPage: number | null;\r\n}\r\n\r\nexport interface AlbumsState {\r\n    albums: Array<Album>;\r\n    metaData: MetaData | null,\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\ninterface LoadAlbumRequest {\r\n    type: typeof LOAD_ALBUM_REQUEST\r\n}\r\n\r\ninterface LoadAlbumSuccess {\r\n    type: typeof LOAD_ALBUM_SUCCESS,\r\n    payload: {\r\n        albums: Array<Album>,\r\n        metaData: MetaData\r\n    }\r\n}\r\n\r\ninterface LoadAlbumFailure {\r\n    type: typeof LOAD_ALBUM_FAILURE,\r\n    payload: {\r\n        error: string\r\n    }\r\n}\r\n\r\nexport type AlbumsActionTypes =\r\n    | LoadAlbumRequest\r\n    | LoadAlbumSuccess\r\n    | LoadAlbumFailure","import React, { ChangeEvent, Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppState } from '../../../store';\r\nimport { GetListAlbum } from '../../../store/Albums/actions';\r\nimport { Album, MetaData } from '../../../store/Albums/types';\r\nimport Pagination from \"react-js-pagination\";\r\nimport moment from 'moment';\r\n\r\nconst ListAlbum = () => {\r\n    const albums = useSelector<AppState>((state) => state.albums.albums) as Array<Album>;\r\n    const metaData = useSelector<AppState>((state) => state.albums.metaData) as MetaData;\r\n    const [keyWord, setKeyWord] = useState<string>('');\r\n    const [page, setPage] = useState<number>(1);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetListAlbum(20, page, keyWord));\r\n    }, [dispatch, keyWord, page])\r\n\r\n    const handlePageChange = (pageNumber: number) => {\r\n        setPage(pageNumber);\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setKeyWord(value);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                </div>\r\n                <div className=\"col-6 text-right mb-2\">\r\n                    <Link className=\"btn btn-success\" to='/create-album'>\r\n                        <i className=\"fas fa-plus\" />\r\n                        &nbsp; Tạo mới album\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                    <h6 className=\"m-0 font-weight-bold text-primary\">Danh sách playlist</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12 col-md-6 pl-4\">\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-6\">\r\n                            <div id=\"dataTable_filter\" style={{ float: 'right' }}>\r\n                                <label>Tìm kiếm:&nbsp;</label>\r\n                                <input type=\"search\" className='border' placeholder='Tên bài hát' aria-controls=\"dataTable\" onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Tên album</th>\r\n                                    <th>Mô tả</th>\r\n                                    <th>Ngày tạo</th>\r\n                                    <th>Ngày cập nhật</th>\r\n                                    <th>Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {albums?.map((item, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{item.albumname}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>{moment(item.createdAt).format('DD/MM/YYYY')}</td>\r\n                                            <td>{moment(item.updatedAt).format('DD/MM/YYYY')}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger ml-1 mr-1\" >\r\n                                                    <i className=\"far fa-trash-alt\" />\r\n                                                    &nbsp; Xóa\r\n                                                </button>\r\n                                                <Link className='btn btn-primary ml-1' to={`/edit-playlist/${item._id}`}>\r\n                                                    <i className=\"fas fa-play-circle\" />\r\n                                                    &nbsp; Chỉnh sửa\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        activePage={metaData?.page}\r\n                        itemsCountPerPage={metaData?.limit}\r\n                        totalItemsCount={metaData?.totalDocs | 0}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAlbum;","import { Dispatch } from \"redux\";\r\nimport { albumsServices } from \"../../services\";\r\nimport { \r\n    AlbumsActionTypes, \r\n    LOAD_ALBUM_FAILURE, \r\n    LOAD_ALBUM_REQUEST, \r\n    LOAD_ALBUM_SUCCESS\r\n} from \"./types\";\r\n\r\nexport const GetListAlbum = (limit: number, page: number, keyWord: string) => {\r\n    return async (dispatch: Dispatch<AlbumsActionTypes>) => {\r\n        dispatch({\r\n            type: LOAD_ALBUM_REQUEST\r\n        });\r\n\r\n        try {\r\n            const response = await albumsServices.GetListAlbum(limit, page, keyWord);\r\n            dispatch({\r\n                type: LOAD_ALBUM_SUCCESS,\r\n                payload: {\r\n                    albums: response.data.items,\r\n                    metaData: response.data.meta\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOAD_ALBUM_FAILURE,\r\n                payload: {\r\n                    error: error.toString()\r\n                },\r\n            });\r\n        }\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport { GetMyProfile } from '../../store/Account/actions';\r\nimport { NotFound } from '../Account';\r\nimport LeftMenu from './Components/LefMenu';\r\nimport TopNavBar from './Components/TopNavbar';\r\nimport EditProfile from './Profile/EditProfile';\r\nimport ViewProfile from './Profile/ViewProfile';\r\nimport { history } from '../../helpers';\r\nimport { ListUser } from './Users/ListUser';\r\nimport { ListTrackTypes } from './TrackTypes/ListTrackTypes';\r\nimport { AddTrackType } from './TrackTypes/AddTrackType';\r\nimport { EditTrackType } from './TrackTypes/EditTrackType';\r\nimport { ListTrack } from './Tracks/ListTrack';\r\nimport { ListSinger } from './Singers/ListSinger';\r\nimport { AddSinger } from './Singers/AddSinger';\r\nimport { EditSinger } from './Singers/EditSinger';\r\nimport { AddTrack } from './Tracks/AddTrack';\r\nimport Playlists from './Playlist/Playlists';\r\nimport CreatePlaylist from './Playlist/CreatePlaylist';\r\nimport EditPlaylist from './Playlist/EditPlaylist';\r\nimport CreateAlbum from './Albums/CreateAlbum';\r\nimport ListAlbum from './Albums/ListAlbum';\r\n\r\nexport const Admin = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(GetMyProfile());\r\n    }, [dispatch]);\r\n    return (\r\n        <Router history={history}>\r\n            <LeftMenu />\r\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                <div id=\"content\">\r\n                    <TopNavBar />\r\n                    <div className=\"container-fluid\">\r\n                        <Switch>\r\n                            <Route\r\n                                exact path='/'\r\n                                component={ListUser} />\r\n                            <Route\r\n                                exact path='/singer'\r\n                                component={ListSinger} />\r\n                            <Route\r\n                                exact path='/singer/create'\r\n                                component={AddSinger} />\r\n                            <Route\r\n                                exact path='/singer/edit/:id'\r\n                                component={EditSinger} />\r\n                            <Route\r\n                                exact path='/track-types'\r\n                                component={ListTrackTypes} />\r\n                            <Route\r\n                                exact path='/add-tracktype'\r\n                                component={AddTrackType} />\r\n                            <Route\r\n                                exact path='/edit-tracktype/:id'\r\n                                component={EditTrackType} />\r\n                            <Route\r\n                                exact path='/list-track/limit=:limit&page=:page'\r\n                                component={ListTrack} />\r\n                            <Route\r\n                                exact path='/add-track'\r\n                                component={AddTrack} />\r\n                            <Route\r\n                                exact path='/my-profile'\r\n                                component={ViewProfile} />\r\n                            <Route\r\n                                exact path='/update-profile'\r\n                                component={EditProfile} />\r\n                            <Route\r\n                                exact path='/playlists'\r\n                                component={Playlists} />\r\n                            <Route\r\n                                exact path='/create-playlist'\r\n                                component={CreatePlaylist} />\r\n                            <Route\r\n                                exact path='/edit-playlist/:id'\r\n                                component={EditPlaylist} />\r\n                            <Route\r\n                                exact path='/create-album'\r\n                                component={CreateAlbum} />\r\n                            <Route\r\n                                exact path='/list-album'\r\n                                component={ListAlbum} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport { Login } from '../pages/Account/Login';\r\nimport { AppState } from '../store';\r\nimport { AccountState } from '../store/Account/types';\r\n\r\nexport const AccountRoute = ({ children, ...rest }: RouteProps): JSX.Element => {\r\n  const account: AccountState = useSelector((state: AppState) => state.account);\r\n  return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          account.accessToken ? (\r\n            <Redirect to={{ pathname: '/' }} />\r\n          ) : (\r\n            <Login />\r\n          )\r\n        }\r\n      ></Route>\r\n    );\r\n}\r\n","import './styles/sb-admin-2.min.css';\nimport './assets/fontawesome-free/css/all.min.css';\nimport './styles/style.css'\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { PrivateRoute } from './components';\nimport {\n  Login,\n  ForgotPassword,\n  ResetPassword\n} from './pages/Account';\nimport { Admin } from './pages/Admin/Admin';\nimport { AccountRoute } from './components/AccountRoute';\nimport { history } from './helpers';\nimport { useSelector } from 'react-redux';\nimport { AppState } from './store';\nimport { useState } from 'react';\n\nfunction App() {\n  const [account] = useState(useSelector((state: AppState) => state.account));\n\n  return (\n    <div className=\"App\" id=\"wrapper\">\n      <Router history={history}>\n        <Switch>\n          {account.accessToken === null ?\n            <Route path='/forgot-password' component={ForgotPassword} /> : ''\n          }\n          {account.accessToken === null ?\n            <Route path='/reset-password/:token' component={ResetPassword} /> : ''\n          }\n          <PrivateRoute>\n            <AccountRoute path='/login'>\n              <Login />\n            </AccountRoute>\n            <PrivateRoute path='/'>\n              <Admin />\n            </PrivateRoute>\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    AccountState, \r\n    AccountActionTypes, \r\n    LOGIN_REQUEST, \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAILURE, \r\n    LOG_OUT, \r\n    LOAD_CURRENT_USER_REQUEST, \r\n    LOAD_CURRENT_USER_SUCCESS, \r\n    LOAD_CURRENT_USER_FAILURE \r\n} from './types';\r\n\r\nconst initialState: AccountState = {\r\n    user: null,\r\n    loading: false,\r\n    error: '',\r\n    accessToken: null,\r\n    refreshToken: null,\r\n    role: null,\r\n    expireIn: 0\r\n}\r\n\r\nconst accountReducer = (\r\n    state: AccountState = initialState,\r\n    action: AccountActionTypes\r\n): AccountState => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: false,\r\n                accessToken: action.payload.accessToken,\r\n                refreshToken: action.payload.refreshToken,\r\n                expireIn: action.payload.expireIn,\r\n                role: action.payload.role\r\n            };\r\n        }\r\n        case LOGIN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n        }\r\n        case LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                loading: false,\r\n                error: '',\r\n                accessToken: null,\r\n                refreshToken: null,\r\n                role: null,\r\n                expireIn: 0\r\n            }\r\n        }\r\n        case LOAD_CURRENT_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: ''\r\n            }\r\n        }\r\n        case LOAD_CURRENT_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload.user,\r\n                error: ''\r\n            }\r\n        }\r\n        case LOAD_CURRENT_USER_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: action.payload.error\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { accountReducer };","import { \r\n    NotifyActionTypes, \r\n    NotifyState, \r\n    REFRESH_NOTIFY, \r\n    SHOW_NOTIFY\r\n} from \"./types\";\r\n\r\nconst initialState: NotifyState = {\r\n    message: null\r\n}\r\n\r\nconst notifyReducer = (\r\n    state: NotifyState = initialState,\r\n    action: NotifyActionTypes\r\n): NotifyState => {\r\n    switch (action.type) {\r\n        case REFRESH_NOTIFY: {\r\n            return {\r\n                message: action.payload.message\r\n            }\r\n        }\r\n        case SHOW_NOTIFY: {\r\n            return {\r\n                message: action.payload.message\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { notifyReducer };","import { \r\n    DELETE_TRACKTYPE,\r\n    LOAD_TRACKTYPE_FAILURE,\r\n    LOAD_TRACKTYPE_REQUEST,\r\n    LOAD_TRACKTYPE_SUCCESS,\r\n    TrackTypes,\r\n    TrackTypesActionTypes, \r\n    TrackTypesState \r\n} from \"./types\";\r\n\r\nconst initialState: TrackTypesState = {\r\n    tracktypes: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst RefreshItems = (trackTypesState: TrackTypesState, trackType: TrackTypes) => {\r\n    const listTrackTypes = [...trackTypesState.tracktypes];\r\n    const index = listTrackTypes?.findIndex(u => u._id === trackType._id);\r\n    listTrackTypes?.splice(index, 1);\r\n    return listTrackTypes;\r\n}\r\n\r\nconst trackTypesReducer = (\r\n    state: TrackTypesState = initialState,\r\n    action: TrackTypesActionTypes\r\n): TrackTypesState => {\r\n    switch (action.type) {\r\n        case LOAD_TRACKTYPE_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case LOAD_TRACKTYPE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tracktypes: action.payload.tracktypes\r\n            }\r\n        }\r\n        case LOAD_TRACKTYPE_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        }\r\n        case DELETE_TRACKTYPE: {\r\n            return {\r\n                ...state,\r\n                tracktypes: RefreshItems(state, action.payload.trackType)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { trackTypesReducer };","import { \r\n    DELETE_TRACK,\r\n    LOAD_TRACK_FAILURE,\r\n    LOAD_TRACK_REQUEST,\r\n    LOAD_TRACK_SUCCESS,\r\n    TracksActionTypes, \r\n    TracksState \r\n} from \"./types\";\r\n\r\nconst initialState: TracksState = {\r\n    tracks: [],\r\n    metaData: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst RefreshItems = (tracksState: TracksState, id: string) => {\r\n    const listTrack = [...tracksState.tracks];\r\n    const index = listTrack?.findIndex(u => u._id === id);\r\n    listTrack?.splice(index, 1);\r\n    return listTrack;\r\n}\r\n\r\nconst trackReducer = (\r\n    state: TracksState = initialState,\r\n    action: TracksActionTypes\r\n): TracksState => {\r\n    switch (action.type) {\r\n        case LOAD_TRACK_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case LOAD_TRACK_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tracks: action.payload.tracks,\r\n                metaData: action.payload.metaData\r\n            }\r\n        }\r\n        case LOAD_TRACK_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        }\r\n        case DELETE_TRACK: {\r\n            return {\r\n                ...state,\r\n                tracks: RefreshItems(state, action.payload.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { trackReducer };","import { \r\n    LOAD_SINGER_FAILURE,\r\n    LOAD_SINGER_REQUEST,\r\n    LOAD_SINGER_SUCCESS,\r\n    SingersActionTypes,\r\n    SingersState \r\n} from \"./types\";\r\n\r\nconst initialState: SingersState = {\r\n    singers: [],\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nconst singerReducer = (\r\n    state: SingersState = initialState,\r\n    action: SingersActionTypes\r\n): SingersState => {\r\n    switch (action.type) {\r\n        case LOAD_SINGER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload.loading\r\n            }\r\n        }\r\n        case LOAD_SINGER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload.loading,\r\n                singers: action.payload.singers\r\n            }\r\n        }\r\n        case LOAD_SINGER_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload.loading,\r\n                error: action.payload.error\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { singerReducer };","import { \r\n    PlaylistsActionTypes,\r\n    PlaylistsState,\r\n    LOAD_PLAYLIST_REQUEST,\r\n    LOAD_PLAYLIST_SUCCESS,\r\n    LOAD_PLAYLIST_FAILURE\r\n} from \"./types\";\r\n\r\nconst initialState: PlaylistsState = {\r\n    playlists: [],\r\n    metaData: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst playlistReducer = (\r\n    state: PlaylistsState = initialState,\r\n    action: PlaylistsActionTypes\r\n): PlaylistsState => {\r\n    switch (action.type) {\r\n        case LOAD_PLAYLIST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case LOAD_PLAYLIST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                playlists: action.payload.playlists,\r\n                metaData: action.payload.metaData\r\n            }\r\n        }\r\n        case LOAD_PLAYLIST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { playlistReducer };","import { \r\n    AlbumsActionTypes, \r\n    AlbumsState, \r\n    LOAD_ALBUM_FAILURE, \r\n    LOAD_ALBUM_REQUEST,\r\n    LOAD_ALBUM_SUCCESS\r\n} from \"./types\"\r\n\r\nconst initialState: AlbumsState = {\r\n    albums: [],\r\n    metaData: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst albumReducer = (\r\n    state: AlbumsState = initialState,\r\n    action: AlbumsActionTypes\r\n): AlbumsState => {\r\n    switch (action.type) {\r\n        case LOAD_ALBUM_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case LOAD_ALBUM_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                albums: action.payload.albums,\r\n                metaData: action.payload.metaData\r\n            }\r\n        }\r\n        case LOAD_ALBUM_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { albumReducer };","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { accountReducer } from \"./Account/reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { setAuthToken } from '../helpers';\r\nimport { notifyReducer } from \"./Notify/reducers\";\r\nimport { trackTypesReducer } from \"./TrackTypes/reducers\";\r\nimport { trackReducer } from \"./Tracks/reducers\";\r\nimport { singerReducer } from \"./Singers/reducers\";\r\nimport { playlistReducer } from \"./Playlist/reducers\";\r\nimport { albumReducer } from \"./Albums/reducers\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [\r\n      'account'\r\n    ]\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    account: accountReducer,\r\n    notify: notifyReducer,\r\n    tracktypes: trackTypesReducer,\r\n    tracks: trackReducer,\r\n    singers: singerReducer,\r\n    playlists: playlistReducer,\r\n    albums: albumReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\ndeclare global{\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [thunkMiddleware];\r\n    const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n    return createStore(persistedReducer, composeEnhancers(middlewareEnhancer));\r\n}\r\n\r\nconst store = configureStore();\r\nconst persistedStore = persistStore(store);\r\n\r\nlet currentState = store.getState() as AppState;\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState() as AppState;\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.account.accessToken !== currentState.account.accessToken) {\r\n    const token = currentState.account.accessToken;\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n  }\r\n});\r\n\r\nexport { store, persistedStore };","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { persistedStore, store } from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistedStore}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}